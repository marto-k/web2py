(dp1
S'output'
p2
S"<type 'exceptions.IOError'> [Errno 2] No such file or directory: '/home/martin/web2py/applications/examples/ABOUT'"
p3
sS'layer'
p4
S'/home/martin/web2py/applications/admin/controllers/default.py'
p5
sS'code'
p6
S'# coding: utf8\n\nEXPERIMENTAL_STUFF = True\n\nif EXPERIMENTAL_STUFF:\n    is_mobile = request.user_agent().is_mobile\n    if is_mobile:\n        response.view = response.view.replace(\'default/\',\'default.mobile/\')\n        response.menu = []\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if app and (not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count()):\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n            login_record(True)\n            session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            times_denied = login_record(False)\n            if times_denied >= allowed_number_of_attempts:\n                response.flash = \\\n                    T(\'admin disabled because too many invalid login attempts\')\n            elif times_denied == allowed_number_of_attempts - 1:\n                response.flash = \\\n                    T(\'You have one more login attempt before you are locked out\')\n            else:\n                response.flash = T(\'invalid password.\')\n    return dict(send=send)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):\n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef enable():\n    app = get_app()\n    filename = os.path.join(apath(app, r=request),\'DISABLED\')\n    if os.path.exists(filename):\n        os.unlink(filename)\n        return SPAN(T(\'Disable\'),_style=\'color:green\')\n    else:\n        open(filename,\'wb\').write(time.ctime())\n        return SPAN(T(\'Enable\'),_style=\'color:red\')\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if (\'revert\' in request.vars) and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\\n\'.join([item[2:].rstrip() for (i, item) in enumerate(d) if item[0] \\\n                           == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None and not isinstance(request.vars.pluginfile,str):\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n    elif isinstance(request.vars.pluginfile,str):\n        session.flash = T(\'plugin not specified\')\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+(\\.\\w+)+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views if not x.endswith(\'.bak\')]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.rsplit(\'.\',1)[0] == plugin_name:\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))\n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n\n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon import *\\n""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        filename = None\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        if filename:\n            d = dict(filename = filename[len(path):])\n        else:\n            d = dict(filename = \'unkown\')\n        session.flash = T(\'cannot upload file "%(filename)s"\', d)\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n    db_ready = {}\n    db_ready[\'status\'] = get_ticket_storage(app)\n    db_ready[\'errmessage\'] = "No ticket_storage.txt found under /private folder"\n    db_ready[\'errlink\'] = "http://web2py.com/books/default/chapter/29/13#Collecting-tickets"\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method, db_ready=db_ready)\n\n    elif method == \'dbnew\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n        tk_db, tk_table = get_ticket_storage(app)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in tk_db(tk_table.id>0).select():\n            try:\n                error = pickle.loads(fn.ticket_data)\n            except AttributeError:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                tk_db(tk_table.id == fn.id).delete()\n                tk_db.commit()\n            else:\n                try:\n                    hash2error[\'hash\'][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn.ticket_id)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n\n    elif method == \'dbold\':\n        tk_db, tk_table = get_ticket_storage(app)\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                tk_db(tk_table.ticket_id == item[7:]).delete()\n                tk_db.commit()\n        tickets_ = tk_db(tk_table.id>0).select(tk_table.ticket_id, tk_table.created_datetime, orderby=~tk_table.created_datetime)\n        tickets = [row.ticket_id for row in tickets_]\n        times = dict([(row.ticket_id, row.created_datetime) for row in tickets_])\n\n        return dict(app=app, tickets=tickets, method=method, times=times)\n\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method, db_ready=db_ready)\n\ndef get_ticket_storage(app):\n    private_folder = apath(\'%s/private\' % app, r=request)\n    ticket_file = os.path.join(private_folder, \'ticket_storage.txt\')\n    if os.path.exists(ticket_file):\n        db_string = open(ticket_file).read()\n        db_string = db_string.strip().replace(\'\\r\',\'\').replace(\'\\n\',\'\')\n    else:\n        return False\n    tickets_table = \'web2py_ticket\'\n    tablename = tickets_table + \'_\' + app\n    db_path = apath(\'%s/databases\' % app, r=request)\n    ticketsdb = DAL(db_string, folder=db_path, auto_import=True)\n    if not ticketsdb.get(tablename):\n        table = ticketsdb.define_table(\n                tablename,\n                Field(\'ticket_id\', length=100),\n                Field(\'ticket_data\', \'text\'),\n                Field(\'created_datetime\', \'datetime\'),\n                )\n    return ticketsdb , ticketsdb.get(tablename)\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef ticketdb():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    request.tickets_db = get_ticket_storage(app)[0]\n    e.load(request, app, ticket)\n    response.view = \'default/ticket.html\'\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app,anchor=\'languages\'))\n\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        if TWITTER_HASH:\n            page = urllib.urlopen("http://search.twitter.com/search.json?q=%%40%s" % TWITTER_HASH).read()\n            data = sj.loads(page  , encoding="utf-8")[\'results\']\n            d = dict()\n            for e in data:\n                d[e["id"]] = e\n            r = reversed(sorted(d))\n            return dict(tweets = [d[k] for k in r])\n        else:\n            return \'disabled\'\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False\n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n    """ Reload routes.py """\n    import gluon.rewrite\n    gluon.rewrite.load()\n    redirect(URL(\'site\'))\n\n\n\nresponse._vars=response._caller(about)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IOError object>"
p13
sS'__str__'
p14
S"<method-wrapper '__str__' of exceptions.IOError object>"
p15
sS'__reduce__'
p16
S'<built-in method __reduce__ of exceptions.IOError object>'
p17
sS'__dict__'
p18
S'{}'
p19
sS'__sizeof__'
p20
S'<built-in method __sizeof__ of exceptions.IOError object>'
p21
sS'__init__'
p22
S"<method-wrapper '__init__' of exceptions.IOError object>"
p23
sS'__setattr__'
p24
S"<method-wrapper '__setattr__' of exceptions.IOError object>"
p25
sS'__reduce_ex__'
p26
S'<built-in method __reduce_ex__ of exceptions.IOError object>'
p27
sS'__new__'
p28
S'<built-in method __new__ of type object>'
p29
sS'errno'
p30
S'2'
sS'__format__'
p31
S'<built-in method __format__ of exceptions.IOError object>'
p32
sS'__class__'
p33
S"<type 'exceptions.IOError'>"
p34
sS'filename'
p35
S"'/home/martin/web2py/applications/examples/ABOUT'"
p36
sS'__doc__'
p37
S"'I/O operation failed.'"
p38
sS'__getitem__'
p39
S"<method-wrapper '__getitem__' of exceptions.IOError object>"
p40
sS'__setstate__'
p41
S'<built-in method __setstate__ of exceptions.IOError object>'
p42
sS'__getattribute__'
p43
S"<method-wrapper '__getattribute__' of exceptions.IOError object>"
p44
sS'args'
p45
S"(2, 'No such file or directory')"
p46
sS'__subclasshook__'
p47
S'<built-in method __subclasshook__ of type object>'
p48
sS'__unicode__'
p49
S'<built-in method __unicode__ of exceptions.IOError object>'
p50
sS'strerror'
p51
S"'No such file or directory'"
p52
sS'__delattr__'
p53
S"<method-wrapper '__delattr__' of exceptions.IOError object>"
p54
sS'__repr__'
p55
S"<method-wrapper '__repr__' of exceptions.IOError object>"
p56
sS'__hash__'
p57
S"<method-wrapper '__hash__' of exceptions.IOError object>"
p58
ssS'evalue'
p59
S"[Errno 2] No such file or directory: '/home/martin/web2py/applications/examples/ABOUT'"
p60
sS'request'
p61
ccopy_reg
_reconstructor
p62
(cgluon.html
BEAUTIFY
p63
c__builtin__
object
p64
NtRp65
(dp66
S'attributes'
p67
(dp68
sS'components'
p69
(lp70
g62
(cgluon.html
TABLE
p71
g64
NtRp72
(dp73
g67
(dp74
S'level'
p75
I5
ssS'parent'
p76
Nsg69
(lp77
g62
(cgluon.html
TR
p78
g64
NtRp79
(dp80
g67
(dp81
sg76
g72
sg69
(lp82
g62
(cgluon.html
TD
p83
g64
NtRp84
(dp85
g67
(dp86
S'_style'
p87
S'font-weight:bold;vertical-align:top'
p88
ssg76
g79
sg69
(lp89
S'ajax'
p90
asbag62
(g83
g64
NtRp91
(dp92
g67
(dp93
S'_valign'
p94
S'top'
p95
ssg76
g79
sg69
(lp96
S':'
asbag62
(g83
g64
NtRp97
(dp98
g67
(dp99
sg76
g79
sg69
(lp100
g62
(g63
g64
NtRp101
(dp102
g67
(dp103
g75
I5
ssg76
g97
sg69
(lp104
S'False'
p105
asbasbasbag62
(g78
g64
NtRp106
(dp107
g67
(dp108
sg76
g72
sg69
(lp109
g62
(g83
g64
NtRp110
(dp111
g67
(dp112
g87
g88
ssg76
g106
sg69
(lp113
S'application'
p114
asbag62
(g83
g64
NtRp115
(dp116
g67
(dp117
g94
g95
ssg76
g106
sg69
(lp118
S':'
asbag62
(g83
g64
NtRp119
(dp120
g67
(dp121
sg76
g106
sg69
(lp122
g62
(g63
g64
NtRp123
(dp124
g67
(dp125
g75
I5
ssg76
g119
sg69
(lp126
S'admin'
p127
asbasbasbag62
(g78
g64
NtRp128
(dp129
g67
(dp130
sg76
g72
sg69
(lp131
g62
(g83
g64
NtRp132
(dp133
g67
(dp134
g87
g88
ssg76
g128
sg69
(lp135
g45
asbag62
(g83
g64
NtRp136
(dp137
g67
(dp138
g94
g95
ssg76
g128
sg69
(lp139
S':'
asbag62
(g83
g64
NtRp140
(dp141
g67
(dp142
sg76
g128
sg69
(lp143
g62
(g63
g64
NtRp144
(dp145
g67
(dp146
g75
I5
ssg76
g140
sg69
(lp147
g62
(g71
g64
NtRp148
(dp149
g67
(dp150
g75
I4
ssg76
Nsg69
(lp151
g62
(g78
g64
NtRp152
(dp153
g67
(dp154
sg76
g148
sg69
(lp155
g62
(g83
g64
NtRp156
(dp157
g67
(dp158
sg76
g152
sg69
(lp159
g62
(g63
g64
NtRp160
(dp161
g67
(dp162
g75
I4
ssg76
g156
sg69
(lp163
S'examples'
p164
asbasbasbasbasbasbasbag62
(g78
g64
NtRp165
(dp166
g67
(dp167
sg76
g72
sg69
(lp168
g62
(g83
g64
NtRp169
(dp170
g67
(dp171
g87
g88
ssg76
g165
sg69
(lp172
S'body'
p173
asbag62
(g83
g64
NtRp174
(dp175
g67
(dp176
g94
g95
ssg76
g165
sg69
(lp177
S':'
asbag62
(g83
g64
NtRp178
(dp179
g67
(dp180
sg76
g165
sg69
(lp181
g62
(g63
g64
NtRp182
(dp183
g67
(dp184
g75
I5
ssg76
g178
sg69
(lp185
S'<cStringIO.StringO object at 0x7fe91d0b9a78>'
p186
asbasbasbag62
(g78
g64
NtRp187
(dp188
g67
(dp189
sg76
g72
sg69
(lp190
g62
(g83
g64
NtRp191
(dp192
g67
(dp193
g87
g88
ssg76
g187
sg69
(lp194
S'client'
p195
asbag62
(g83
g64
NtRp196
(dp197
g67
(dp198
g94
g95
ssg76
g187
sg69
(lp199
S':'
asbag62
(g83
g64
NtRp200
(dp201
g67
(dp202
sg76
g187
sg69
(lp203
g62
(g63
g64
NtRp204
(dp205
g67
(dp206
g75
I5
ssg76
g200
sg69
(lp207
S'127.0.0.1'
p208
asbasbasbag62
(g78
g64
NtRp209
(dp210
g67
(dp211
sg76
g72
sg69
(lp212
g62
(g83
g64
NtRp213
(dp214
g67
(dp215
g87
g88
ssg76
g209
sg69
(lp216
S'controller'
p217
asbag62
(g83
g64
NtRp218
(dp219
g67
(dp220
g94
g95
ssg76
g209
sg69
(lp221
S':'
asbag62
(g83
g64
NtRp222
(dp223
g67
(dp224
sg76
g209
sg69
(lp225
g62
(g63
g64
NtRp226
(dp227
g67
(dp228
g75
I5
ssg76
g222
sg69
(lp229
S'default'
p230
asbasbasbag62
(g78
g64
NtRp231
(dp232
g67
(dp233
sg76
g72
sg69
(lp234
g62
(g83
g64
NtRp235
(dp236
g67
(dp237
g87
g88
ssg76
g231
sg69
(lp238
S'cookies'
p239
asbag62
(g83
g64
NtRp240
(dp241
g67
(dp242
g94
g95
ssg76
g231
sg69
(lp243
S':'
asbag62
(g83
g64
NtRp244
(dp245
g67
(dp246
sg76
g231
sg69
(lp247
g62
(g63
g64
NtRp248
(dp249
g67
(dp250
g75
I5
ssg76
g244
sg69
(lp251
g62
(g71
g64
NtRp252
(dp253
g67
(dp254
g75
I4
ssg76
Nsg69
(lp255
g62
(g78
g64
NtRp256
(dp257
g67
(dp258
sg76
g252
sg69
(lp259
g62
(g83
g64
NtRp260
(dp261
g67
(dp262
g87
g88
ssg76
g256
sg69
(lp263
S'session_id_admin'
p264
asbag62
(g83
g64
NtRp265
(dp266
g67
(dp267
g94
g95
ssg76
g256
sg69
(lp268
S':'
asbag62
(g83
g64
NtRp269
(dp270
g67
(dp271
sg76
g256
sg69
(lp272
g62
(g63
g64
NtRp273
(dp274
g67
(dp275
g75
I4
ssg76
g269
sg69
(lp276
g62
(g71
g64
NtRp277
(dp278
g67
(dp279
g75
I3
ssg76
Nsg69
(lp280
g62
(g78
g64
NtRp281
(dp282
g67
(dp283
sg76
g277
sg69
(lp284
g62
(g83
g64
NtRp285
(dp286
g67
(dp287
g87
g88
ssg76
g281
sg69
(lp288
S'comment'
p289
asbag62
(g83
g64
NtRp290
(dp291
g67
(dp292
g94
g95
ssg76
g281
sg69
(lp293
S':'
asbag62
(g83
g64
NtRp294
(dp295
g67
(dp296
sg76
g281
sg69
(lp297
g62
(g63
g64
NtRp298
(dp299
g67
(dp300
g75
I3
ssg76
g294
sg69
(lp301
S''
asbasbasbag62
(g78
g64
NtRp302
(dp303
g67
(dp304
sg76
g277
sg69
(lp305
g62
(g83
g64
NtRp306
(dp307
g67
(dp308
g87
g88
ssg76
g302
sg69
(lp309
S'domain'
p310
asbag62
(g83
g64
NtRp311
(dp312
g67
(dp313
g94
g95
ssg76
g302
sg69
(lp314
S':'
asbag62
(g83
g64
NtRp315
(dp316
g67
(dp317
sg76
g302
sg69
(lp318
g62
(g63
g64
NtRp319
(dp320
g67
(dp321
g75
I3
ssg76
g315
sg69
(lp322
S''
asbasbasbag62
(g78
g64
NtRp323
(dp324
g67
(dp325
sg76
g277
sg69
(lp326
g62
(g83
g64
NtRp327
(dp328
g67
(dp329
g87
g88
ssg76
g323
sg69
(lp330
S'expires'
p331
asbag62
(g83
g64
NtRp332
(dp333
g67
(dp334
g94
g95
ssg76
g323
sg69
(lp335
S':'
asbag62
(g83
g64
NtRp336
(dp337
g67
(dp338
sg76
g323
sg69
(lp339
g62
(g63
g64
NtRp340
(dp341
g67
(dp342
g75
I3
ssg76
g336
sg69
(lp343
S''
asbasbasbag62
(g78
g64
NtRp344
(dp345
g67
(dp346
sg76
g277
sg69
(lp347
g62
(g83
g64
NtRp348
(dp349
g67
(dp350
g87
g88
ssg76
g344
sg69
(lp351
S'httponly'
p352
asbag62
(g83
g64
NtRp353
(dp354
g67
(dp355
g94
g95
ssg76
g344
sg69
(lp356
S':'
asbag62
(g83
g64
NtRp357
(dp358
g67
(dp359
sg76
g344
sg69
(lp360
g62
(g63
g64
NtRp361
(dp362
g67
(dp363
g75
I3
ssg76
g357
sg69
(lp364
S''
asbasbasbag62
(g78
g64
NtRp365
(dp366
g67
(dp367
sg76
g277
sg69
(lp368
g62
(g83
g64
NtRp369
(dp370
g67
(dp371
g87
g88
ssg76
g365
sg69
(lp372
S'max-age'
p373
asbag62
(g83
g64
NtRp374
(dp375
g67
(dp376
g94
g95
ssg76
g365
sg69
(lp377
S':'
asbag62
(g83
g64
NtRp378
(dp379
g67
(dp380
sg76
g365
sg69
(lp381
g62
(g63
g64
NtRp382
(dp383
g67
(dp384
g75
I3
ssg76
g378
sg69
(lp385
S''
asbasbasbag62
(g78
g64
NtRp386
(dp387
g67
(dp388
sg76
g277
sg69
(lp389
g62
(g83
g64
NtRp390
(dp391
g67
(dp392
g87
g88
ssg76
g386
sg69
(lp393
S'path'
p394
asbag62
(g83
g64
NtRp395
(dp396
g67
(dp397
g94
g95
ssg76
g386
sg69
(lp398
S':'
asbag62
(g83
g64
NtRp399
(dp400
g67
(dp401
sg76
g386
sg69
(lp402
g62
(g63
g64
NtRp403
(dp404
g67
(dp405
g75
I3
ssg76
g399
sg69
(lp406
S''
asbasbasbag62
(g78
g64
NtRp407
(dp408
g67
(dp409
sg76
g277
sg69
(lp410
g62
(g83
g64
NtRp411
(dp412
g67
(dp413
g87
g88
ssg76
g407
sg69
(lp414
S'secure'
p415
asbag62
(g83
g64
NtRp416
(dp417
g67
(dp418
g94
g95
ssg76
g407
sg69
(lp419
S':'
asbag62
(g83
g64
NtRp420
(dp421
g67
(dp422
sg76
g407
sg69
(lp423
g62
(g63
g64
NtRp424
(dp425
g67
(dp426
g75
I3
ssg76
g420
sg69
(lp427
S''
asbasbasbag62
(g78
g64
NtRp428
(dp429
g67
(dp430
sg76
g277
sg69
(lp431
g62
(g83
g64
NtRp432
(dp433
g67
(dp434
g87
g88
ssg76
g428
sg69
(lp435
S'version'
p436
asbag62
(g83
g64
NtRp437
(dp438
g67
(dp439
g94
g95
ssg76
g428
sg69
(lp440
S':'
asbag62
(g83
g64
NtRp441
(dp442
g67
(dp443
sg76
g428
sg69
(lp444
g62
(g63
g64
NtRp445
(dp446
g67
(dp447
g75
I3
ssg76
g441
sg69
(lp448
S''
asbasbasbasbasbasbasbag62
(g78
g64
NtRp449
(dp450
g67
(dp451
sg76
g252
sg69
(lp452
g62
(g83
g64
NtRp453
(dp454
g67
(dp455
g87
g88
ssg76
g449
sg69
(lp456
S'session_id_welcome'
p457
asbag62
(g83
g64
NtRp458
(dp459
g67
(dp460
g94
g95
ssg76
g449
sg69
(lp461
S':'
asbag62
(g83
g64
NtRp462
(dp463
g67
(dp464
sg76
g449
sg69
(lp465
g62
(g63
g64
NtRp466
(dp467
g67
(dp468
g75
I4
ssg76
g462
sg69
(lp469
g62
(g71
g64
NtRp470
(dp471
g67
(dp472
g75
I3
ssg76
Nsg69
(lp473
g62
(g78
g64
NtRp474
(dp475
g67
(dp476
sg76
g470
sg69
(lp477
g62
(g83
g64
NtRp478
(dp479
g67
(dp480
g87
g88
ssg76
g474
sg69
(lp481
g289
asbag62
(g83
g64
NtRp482
(dp483
g67
(dp484
g94
g95
ssg76
g474
sg69
(lp485
S':'
asbag62
(g83
g64
NtRp486
(dp487
g67
(dp488
sg76
g474
sg69
(lp489
g62
(g63
g64
NtRp490
(dp491
g67
(dp492
g75
I3
ssg76
g486
sg69
(lp493
S''
asbasbasbag62
(g78
g64
NtRp494
(dp495
g67
(dp496
sg76
g470
sg69
(lp497
g62
(g83
g64
NtRp498
(dp499
g67
(dp500
g87
g88
ssg76
g494
sg69
(lp501
g310
asbag62
(g83
g64
NtRp502
(dp503
g67
(dp504
g94
g95
ssg76
g494
sg69
(lp505
S':'
asbag62
(g83
g64
NtRp506
(dp507
g67
(dp508
sg76
g494
sg69
(lp509
g62
(g63
g64
NtRp510
(dp511
g67
(dp512
g75
I3
ssg76
g506
sg69
(lp513
S''
asbasbasbag62
(g78
g64
NtRp514
(dp515
g67
(dp516
sg76
g470
sg69
(lp517
g62
(g83
g64
NtRp518
(dp519
g67
(dp520
g87
g88
ssg76
g514
sg69
(lp521
g331
asbag62
(g83
g64
NtRp522
(dp523
g67
(dp524
g94
g95
ssg76
g514
sg69
(lp525
S':'
asbag62
(g83
g64
NtRp526
(dp527
g67
(dp528
sg76
g514
sg69
(lp529
g62
(g63
g64
NtRp530
(dp531
g67
(dp532
g75
I3
ssg76
g526
sg69
(lp533
S''
asbasbasbag62
(g78
g64
NtRp534
(dp535
g67
(dp536
sg76
g470
sg69
(lp537
g62
(g83
g64
NtRp538
(dp539
g67
(dp540
g87
g88
ssg76
g534
sg69
(lp541
g352
asbag62
(g83
g64
NtRp542
(dp543
g67
(dp544
g94
g95
ssg76
g534
sg69
(lp545
S':'
asbag62
(g83
g64
NtRp546
(dp547
g67
(dp548
sg76
g534
sg69
(lp549
g62
(g63
g64
NtRp550
(dp551
g67
(dp552
g75
I3
ssg76
g546
sg69
(lp553
S''
asbasbasbag62
(g78
g64
NtRp554
(dp555
g67
(dp556
sg76
g470
sg69
(lp557
g62
(g83
g64
NtRp558
(dp559
g67
(dp560
g87
g88
ssg76
g554
sg69
(lp561
g373
asbag62
(g83
g64
NtRp562
(dp563
g67
(dp564
g94
g95
ssg76
g554
sg69
(lp565
S':'
asbag62
(g83
g64
NtRp566
(dp567
g67
(dp568
sg76
g554
sg69
(lp569
g62
(g63
g64
NtRp570
(dp571
g67
(dp572
g75
I3
ssg76
g566
sg69
(lp573
S''
asbasbasbag62
(g78
g64
NtRp574
(dp575
g67
(dp576
sg76
g470
sg69
(lp577
g62
(g83
g64
NtRp578
(dp579
g67
(dp580
g87
g88
ssg76
g574
sg69
(lp581
g394
asbag62
(g83
g64
NtRp582
(dp583
g67
(dp584
g94
g95
ssg76
g574
sg69
(lp585
S':'
asbag62
(g83
g64
NtRp586
(dp587
g67
(dp588
sg76
g574
sg69
(lp589
g62
(g63
g64
NtRp590
(dp591
g67
(dp592
g75
I3
ssg76
g586
sg69
(lp593
S''
asbasbasbag62
(g78
g64
NtRp594
(dp595
g67
(dp596
sg76
g470
sg69
(lp597
g62
(g83
g64
NtRp598
(dp599
g67
(dp600
g87
g88
ssg76
g594
sg69
(lp601
g415
asbag62
(g83
g64
NtRp602
(dp603
g67
(dp604
g94
g95
ssg76
g594
sg69
(lp605
S':'
asbag62
(g83
g64
NtRp606
(dp607
g67
(dp608
sg76
g594
sg69
(lp609
g62
(g63
g64
NtRp610
(dp611
g67
(dp612
g75
I3
ssg76
g606
sg69
(lp613
S''
asbasbasbag62
(g78
g64
NtRp614
(dp615
g67
(dp616
sg76
g470
sg69
(lp617
g62
(g83
g64
NtRp618
(dp619
g67
(dp620
g87
g88
ssg76
g614
sg69
(lp621
g436
asbag62
(g83
g64
NtRp622
(dp623
g67
(dp624
g94
g95
ssg76
g614
sg69
(lp625
S':'
asbag62
(g83
g64
NtRp626
(dp627
g67
(dp628
sg76
g614
sg69
(lp629
g62
(g63
g64
NtRp630
(dp631
g67
(dp632
g75
I3
ssg76
g626
sg69
(lp633
S''
asbasbasbasbasbasbasbasbasbasbasbag62
(g78
g64
NtRp634
(dp635
g67
(dp636
sg76
g72
sg69
(lp637
g62
(g83
g64
NtRp638
(dp639
g67
(dp640
g87
g88
ssg76
g634
sg69
(lp641
S'env'
p642
asbag62
(g83
g64
NtRp643
(dp644
g67
(dp645
g94
g95
ssg76
g634
sg69
(lp646
S':'
asbag62
(g83
g64
NtRp647
(dp648
g67
(dp649
sg76
g634
sg69
(lp650
g62
(g63
g64
NtRp651
(dp652
g67
(dp653
g75
I5
ssg76
g647
sg69
(lp654
g62
(g71
g64
NtRp655
(dp656
g67
(dp657
g75
I4
ssg76
Nsg69
(lp658
g62
(g78
g64
NtRp659
(dp660
g67
(dp661
sg76
g655
sg69
(lp662
g62
(g83
g64
NtRp663
(dp664
g67
(dp665
g87
g88
ssg76
g659
sg69
(lp666
S'app_folders'
p667
asbag62
(g83
g64
NtRp668
(dp669
g67
(dp670
g94
g95
ssg76
g659
sg69
(lp671
S':'
asbag62
(g83
g64
NtRp672
(dp673
g67
(dp674
sg76
g659
sg69
(lp675
g62
(g63
g64
NtRp676
(dp677
g67
(dp678
g75
I4
ssg76
g672
sg69
(lp679
S"set(['/home/martin/web2py/applications/admin/', '/home/martin/web2py/applications/welcome/'])"
p680
asbasbasbag62
(g78
g64
NtRp681
(dp682
g67
(dp683
sg76
g655
sg69
(lp684
g62
(g83
g64
NtRp685
(dp686
g67
(dp687
g87
g88
ssg76
g681
sg69
(lp688
S'applications_parent'
p689
asbag62
(g83
g64
NtRp690
(dp691
g67
(dp692
g94
g95
ssg76
g681
sg69
(lp693
S':'
asbag62
(g83
g64
NtRp694
(dp695
g67
(dp696
sg76
g681
sg69
(lp697
g62
(g63
g64
NtRp698
(dp699
g67
(dp700
g75
I4
ssg76
g694
sg69
(lp701
S'/home/martin/web2py'
p702
asbasbasbag62
(g78
g64
NtRp703
(dp704
g67
(dp705
sg76
g655
sg69
(lp706
g62
(g83
g64
NtRp707
(dp708
g67
(dp709
g87
g88
ssg76
g703
sg69
(lp710
S'cmd_args'
p711
asbag62
(g83
g64
NtRp712
(dp713
g67
(dp714
g94
g95
ssg76
g703
sg69
(lp715
S':'
asbag62
(g83
g64
NtRp716
(dp717
g67
(dp718
sg76
g703
sg69
(lp719
g62
(g63
g64
NtRp720
(dp721
g67
(dp722
g75
I4
ssg76
g716
sg69
(lp723
g62
(g71
g64
NtRp724
(dp725
g67
(dp726
g75
I3
ssg76
Nsg69
(lp727
sbasbasbasbag62
(g78
g64
NtRp728
(dp729
g67
(dp730
sg76
g655
sg69
(lp731
g62
(g83
g64
NtRp732
(dp733
g67
(dp734
g87
g88
ssg76
g728
sg69
(lp735
S'cmd_options'
p736
asbag62
(g83
g64
NtRp737
(dp738
g67
(dp739
g94
g95
ssg76
g728
sg69
(lp740
S':'
asbag62
(g83
g64
NtRp741
(dp742
g67
(dp743
sg76
g728
sg69
(lp744
g62
(g63
g64
NtRp745
(dp746
g67
(dp747
g75
I4
ssg76
g741
sg69
(lp748
S"<Values at 0x7fe987eb93b0: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'martin-HP-ProBook-6570b', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/home/martin/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p749
asbasbasbag62
(g78
g64
NtRp750
(dp751
g67
(dp752
sg76
g655
sg69
(lp753
g62
(g83
g64
NtRp754
(dp755
g67
(dp756
g87
g88
ssg76
g750
sg69
(lp757
S'db_sessions'
p758
asbag62
(g83
g64
NtRp759
(dp760
g67
(dp761
g94
g95
ssg76
g750
sg69
(lp762
S':'
asbag62
(g83
g64
NtRp763
(dp764
g67
(dp765
sg76
g750
sg69
(lp766
g62
(g63
g64
NtRp767
(dp768
g67
(dp769
g75
I4
ssg76
g763
sg69
(lp770
S'set([])'
p771
asbasbasbag62
(g78
g64
NtRp772
(dp773
g67
(dp774
sg76
g655
sg69
(lp775
g62
(g83
g64
NtRp776
(dp777
g67
(dp778
g87
g88
ssg76
g772
sg69
(lp779
S'debugging'
p780
asbag62
(g83
g64
NtRp781
(dp782
g67
(dp783
g94
g95
ssg76
g772
sg69
(lp784
S':'
asbag62
(g83
g64
NtRp785
(dp786
g67
(dp787
sg76
g772
sg69
(lp788
g62
(g63
g64
NtRp789
(dp790
g67
(dp791
g75
I4
ssg76
g785
sg69
(lp792
g105
asbasbasbag62
(g78
g64
NtRp793
(dp794
g67
(dp795
sg76
g655
sg69
(lp796
g62
(g83
g64
NtRp797
(dp798
g67
(dp799
g87
g88
ssg76
g793
sg69
(lp800
S'gluon_parent'
p801
asbag62
(g83
g64
NtRp802
(dp803
g67
(dp804
g94
g95
ssg76
g793
sg69
(lp805
S':'
asbag62
(g83
g64
NtRp806
(dp807
g67
(dp808
sg76
g793
sg69
(lp809
g62
(g63
g64
NtRp810
(dp811
g67
(dp812
g75
I4
ssg76
g806
sg69
(lp813
S'/usr/share/web2py'
p814
asbasbasbag62
(g78
g64
NtRp815
(dp816
g67
(dp817
sg76
g655
sg69
(lp818
g62
(g83
g64
NtRp819
(dp820
g67
(dp821
g87
g88
ssg76
g815
sg69
(lp822
S'http_accept'
p823
asbag62
(g83
g64
NtRp824
(dp825
g67
(dp826
g94
g95
ssg76
g815
sg69
(lp827
S':'
asbag62
(g83
g64
NtRp828
(dp829
g67
(dp830
sg76
g815
sg69
(lp831
g62
(g63
g64
NtRp832
(dp833
g67
(dp834
g75
I4
ssg76
g828
sg69
(lp835
S'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'
p836
asbasbasbag62
(g78
g64
NtRp837
(dp838
g67
(dp839
sg76
g655
sg69
(lp840
g62
(g83
g64
NtRp841
(dp842
g67
(dp843
g87
g88
ssg76
g837
sg69
(lp844
S'http_accept_encoding'
p845
asbag62
(g83
g64
NtRp846
(dp847
g67
(dp848
g94
g95
ssg76
g837
sg69
(lp849
S':'
asbag62
(g83
g64
NtRp850
(dp851
g67
(dp852
sg76
g837
sg69
(lp853
g62
(g63
g64
NtRp854
(dp855
g67
(dp856
g75
I4
ssg76
g850
sg69
(lp857
S'gzip, deflate, sdch'
p858
asbasbasbag62
(g78
g64
NtRp859
(dp860
g67
(dp861
sg76
g655
sg69
(lp862
g62
(g83
g64
NtRp863
(dp864
g67
(dp865
g87
g88
ssg76
g859
sg69
(lp866
S'http_accept_language'
p867
asbag62
(g83
g64
NtRp868
(dp869
g67
(dp870
g94
g95
ssg76
g859
sg69
(lp871
S':'
asbag62
(g83
g64
NtRp872
(dp873
g67
(dp874
sg76
g859
sg69
(lp875
g62
(g63
g64
NtRp876
(dp877
g67
(dp878
g75
I4
ssg76
g872
sg69
(lp879
S'en-US,en;q=0.8'
p880
asbasbasbag62
(g78
g64
NtRp881
(dp882
g67
(dp883
sg76
g655
sg69
(lp884
g62
(g83
g64
NtRp885
(dp886
g67
(dp887
g87
g88
ssg76
g881
sg69
(lp888
S'http_connection'
p889
asbag62
(g83
g64
NtRp890
(dp891
g67
(dp892
g94
g95
ssg76
g881
sg69
(lp893
S':'
asbag62
(g83
g64
NtRp894
(dp895
g67
(dp896
sg76
g881
sg69
(lp897
g62
(g63
g64
NtRp898
(dp899
g67
(dp900
g75
I4
ssg76
g894
sg69
(lp901
S'keep-alive'
p902
asbasbasbag62
(g78
g64
NtRp903
(dp904
g67
(dp905
sg76
g655
sg69
(lp906
g62
(g83
g64
NtRp907
(dp908
g67
(dp909
g87
g88
ssg76
g903
sg69
(lp910
S'http_cookie'
p911
asbag62
(g83
g64
NtRp912
(dp913
g67
(dp914
g94
g95
ssg76
g903
sg69
(lp915
S':'
asbag62
(g83
g64
NtRp916
(dp917
g67
(dp918
sg76
g903
sg69
(lp919
g62
(g63
g64
NtRp920
(dp921
g67
(dp922
g75
I4
ssg76
g916
sg69
(lp923
S'session_id_welcome=127.0.0.1-7cce6f60-fb5f-4cb3-b42e-b757263dd6ed; session_id_admin=127.0.0.1-82be6782-0dbc-42e8-9507-48574f459297'
p924
asbasbasbag62
(g78
g64
NtRp925
(dp926
g67
(dp927
sg76
g655
sg69
(lp928
g62
(g83
g64
NtRp929
(dp930
g67
(dp931
g87
g88
ssg76
g925
sg69
(lp932
S'http_host'
p933
asbag62
(g83
g64
NtRp934
(dp935
g67
(dp936
g94
g95
ssg76
g925
sg69
(lp937
S':'
asbag62
(g83
g64
NtRp938
(dp939
g67
(dp940
sg76
g925
sg69
(lp941
g62
(g63
g64
NtRp942
(dp943
g67
(dp944
g75
I4
ssg76
g938
sg69
(lp945
S'127.0.0.1:8000'
p946
asbasbasbag62
(g78
g64
NtRp947
(dp948
g67
(dp949
sg76
g655
sg69
(lp950
g62
(g83
g64
NtRp951
(dp952
g67
(dp953
g87
g88
ssg76
g947
sg69
(lp954
S'http_referer'
p955
asbag62
(g83
g64
NtRp956
(dp957
g67
(dp958
g94
g95
ssg76
g947
sg69
(lp959
S':'
asbag62
(g83
g64
NtRp960
(dp961
g67
(dp962
sg76
g947
sg69
(lp963
g62
(g63
g64
NtRp964
(dp965
g67
(dp966
g75
I4
ssg76
g960
sg69
(lp967
S'http://127.0.0.1:8000/admin/default/site'
p968
asbasbasbag62
(g78
g64
NtRp969
(dp970
g67
(dp971
sg76
g655
sg69
(lp972
g62
(g83
g64
NtRp973
(dp974
g67
(dp975
g87
g88
ssg76
g969
sg69
(lp976
S'http_upgrade_insecure_requests'
p977
asbag62
(g83
g64
NtRp978
(dp979
g67
(dp980
g94
g95
ssg76
g969
sg69
(lp981
S':'
asbag62
(g83
g64
NtRp982
(dp983
g67
(dp984
sg76
g969
sg69
(lp985
g62
(g63
g64
NtRp986
(dp987
g67
(dp988
g75
I4
ssg76
g982
sg69
(lp989
S'1'
asbasbasbag62
(g78
g64
NtRp990
(dp991
g67
(dp992
sg76
g655
sg69
(lp993
g62
(g83
g64
NtRp994
(dp995
g67
(dp996
g87
g88
ssg76
g990
sg69
(lp997
S'http_user_agent'
p998
asbag62
(g83
g64
NtRp999
(dp1000
g67
(dp1001
g94
g95
ssg76
g990
sg69
(lp1002
S':'
asbag62
(g83
g64
NtRp1003
(dp1004
g67
(dp1005
sg76
g990
sg69
(lp1006
g62
(g63
g64
NtRp1007
(dp1008
g67
(dp1009
g75
I4
ssg76
g1003
sg69
(lp1010
S'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/48.0.2564.116 Chrome/48.0.2564.116 Safari/537.36'
p1011
asbasbasbag62
(g78
g64
NtRp1012
(dp1013
g67
(dp1014
sg76
g655
sg69
(lp1015
g62
(g83
g64
NtRp1016
(dp1017
g67
(dp1018
g87
g88
ssg76
g1012
sg69
(lp1019
S'is_jython'
p1020
asbag62
(g83
g64
NtRp1021
(dp1022
g67
(dp1023
g94
g95
ssg76
g1012
sg69
(lp1024
S':'
asbag62
(g83
g64
NtRp1025
(dp1026
g67
(dp1027
sg76
g1012
sg69
(lp1028
g62
(g63
g64
NtRp1029
(dp1030
g67
(dp1031
g75
I4
ssg76
g1025
sg69
(lp1032
g105
asbasbasbag62
(g78
g64
NtRp1033
(dp1034
g67
(dp1035
sg76
g655
sg69
(lp1036
g62
(g83
g64
NtRp1037
(dp1038
g67
(dp1039
g87
g88
ssg76
g1033
sg69
(lp1040
S'is_pypy'
p1041
asbag62
(g83
g64
NtRp1042
(dp1043
g67
(dp1044
g94
g95
ssg76
g1033
sg69
(lp1045
S':'
asbag62
(g83
g64
NtRp1046
(dp1047
g67
(dp1048
sg76
g1033
sg69
(lp1049
g62
(g63
g64
NtRp1050
(dp1051
g67
(dp1052
g75
I4
ssg76
g1046
sg69
(lp1053
g105
asbasbasbag62
(g78
g64
NtRp1054
(dp1055
g67
(dp1056
sg76
g655
sg69
(lp1057
g62
(g83
g64
NtRp1058
(dp1059
g67
(dp1060
g87
g88
ssg76
g1054
sg69
(lp1061
S'path_info'
p1062
asbag62
(g83
g64
NtRp1063
(dp1064
g67
(dp1065
g94
g95
ssg76
g1054
sg69
(lp1066
S':'
asbag62
(g83
g64
NtRp1067
(dp1068
g67
(dp1069
sg76
g1054
sg69
(lp1070
g62
(g63
g64
NtRp1071
(dp1072
g67
(dp1073
g75
I4
ssg76
g1067
sg69
(lp1074
S'/admin/default/about/examples'
p1075
asbasbasbag62
(g78
g64
NtRp1076
(dp1077
g67
(dp1078
sg76
g655
sg69
(lp1079
g62
(g83
g64
NtRp1080
(dp1081
g67
(dp1082
g87
g88
ssg76
g1076
sg69
(lp1083
S'query_string'
p1084
asbag62
(g83
g64
NtRp1085
(dp1086
g67
(dp1087
g94
g95
ssg76
g1076
sg69
(lp1088
S':'
asbag62
(g83
g64
NtRp1089
(dp1090
g67
(dp1091
sg76
g1076
sg69
(lp1092
g62
(g63
g64
NtRp1093
(dp1094
g67
(dp1095
g75
I4
ssg76
g1089
sg69
(lp1096
S''
asbasbasbag62
(g78
g64
NtRp1097
(dp1098
g67
(dp1099
sg76
g655
sg69
(lp1100
g62
(g83
g64
NtRp1101
(dp1102
g67
(dp1103
g87
g88
ssg76
g1097
sg69
(lp1104
S'remote_addr'
p1105
asbag62
(g83
g64
NtRp1106
(dp1107
g67
(dp1108
g94
g95
ssg76
g1097
sg69
(lp1109
S':'
asbag62
(g83
g64
NtRp1110
(dp1111
g67
(dp1112
sg76
g1097
sg69
(lp1113
g62
(g63
g64
NtRp1114
(dp1115
g67
(dp1116
g75
I4
ssg76
g1110
sg69
(lp1117
g208
asbasbasbag62
(g78
g64
NtRp1118
(dp1119
g67
(dp1120
sg76
g655
sg69
(lp1121
g62
(g83
g64
NtRp1122
(dp1123
g67
(dp1124
g87
g88
ssg76
g1118
sg69
(lp1125
S'remote_port'
p1126
asbag62
(g83
g64
NtRp1127
(dp1128
g67
(dp1129
g94
g95
ssg76
g1118
sg69
(lp1130
S':'
asbag62
(g83
g64
NtRp1131
(dp1132
g67
(dp1133
sg76
g1118
sg69
(lp1134
g62
(g63
g64
NtRp1135
(dp1136
g67
(dp1137
g75
I4
ssg76
g1131
sg69
(lp1138
S'43723'
p1139
asbasbasbag62
(g78
g64
NtRp1140
(dp1141
g67
(dp1142
sg76
g655
sg69
(lp1143
g62
(g83
g64
NtRp1144
(dp1145
g67
(dp1146
g87
g88
ssg76
g1140
sg69
(lp1147
S'request_method'
p1148
asbag62
(g83
g64
NtRp1149
(dp1150
g67
(dp1151
g94
g95
ssg76
g1140
sg69
(lp1152
S':'
asbag62
(g83
g64
NtRp1153
(dp1154
g67
(dp1155
sg76
g1140
sg69
(lp1156
g62
(g63
g64
NtRp1157
(dp1158
g67
(dp1159
g75
I4
ssg76
g1153
sg69
(lp1160
S'GET'
p1161
asbasbasbag62
(g78
g64
NtRp1162
(dp1163
g67
(dp1164
sg76
g655
sg69
(lp1165
g62
(g83
g64
NtRp1166
(dp1167
g67
(dp1168
g87
g88
ssg76
g1162
sg69
(lp1169
S'script_name'
p1170
asbag62
(g83
g64
NtRp1171
(dp1172
g67
(dp1173
g94
g95
ssg76
g1162
sg69
(lp1174
S':'
asbag62
(g83
g64
NtRp1175
(dp1176
g67
(dp1177
sg76
g1162
sg69
(lp1178
g62
(g63
g64
NtRp1179
(dp1180
g67
(dp1181
g75
I4
ssg76
g1175
sg69
(lp1182
S''
asbasbasbag62
(g78
g64
NtRp1183
(dp1184
g67
(dp1185
sg76
g655
sg69
(lp1186
g62
(g83
g64
NtRp1187
(dp1188
g67
(dp1189
g87
g88
ssg76
g1183
sg69
(lp1190
S'server_name'
p1191
asbag62
(g83
g64
NtRp1192
(dp1193
g67
(dp1194
g94
g95
ssg76
g1183
sg69
(lp1195
S':'
asbag62
(g83
g64
NtRp1196
(dp1197
g67
(dp1198
sg76
g1183
sg69
(lp1199
g62
(g63
g64
NtRp1200
(dp1201
g67
(dp1202
g75
I4
ssg76
g1196
sg69
(lp1203
S'martin-HP-ProBook-6570b'
p1204
asbasbasbag62
(g78
g64
NtRp1205
(dp1206
g67
(dp1207
sg76
g655
sg69
(lp1208
g62
(g83
g64
NtRp1209
(dp1210
g67
(dp1211
g87
g88
ssg76
g1205
sg69
(lp1212
S'server_port'
p1213
asbag62
(g83
g64
NtRp1214
(dp1215
g67
(dp1216
g94
g95
ssg76
g1205
sg69
(lp1217
S':'
asbag62
(g83
g64
NtRp1218
(dp1219
g67
(dp1220
sg76
g1205
sg69
(lp1221
g62
(g63
g64
NtRp1222
(dp1223
g67
(dp1224
g75
I4
ssg76
g1218
sg69
(lp1225
S'8000'
p1226
asbasbasbag62
(g78
g64
NtRp1227
(dp1228
g67
(dp1229
sg76
g655
sg69
(lp1230
g62
(g83
g64
NtRp1231
(dp1232
g67
(dp1233
g87
g88
ssg76
g1227
sg69
(lp1234
S'server_protocol'
p1235
asbag62
(g83
g64
NtRp1236
(dp1237
g67
(dp1238
g94
g95
ssg76
g1227
sg69
(lp1239
S':'
asbag62
(g83
g64
NtRp1240
(dp1241
g67
(dp1242
sg76
g1227
sg69
(lp1243
g62
(g63
g64
NtRp1244
(dp1245
g67
(dp1246
g75
I4
ssg76
g1240
sg69
(lp1247
S'HTTP/1.1'
p1248
asbasbasbag62
(g78
g64
NtRp1249
(dp1250
g67
(dp1251
sg76
g655
sg69
(lp1252
g62
(g83
g64
NtRp1253
(dp1254
g67
(dp1255
g87
g88
ssg76
g1249
sg69
(lp1256
S'server_software'
p1257
asbag62
(g83
g64
NtRp1258
(dp1259
g67
(dp1260
g94
g95
ssg76
g1249
sg69
(lp1261
S':'
asbag62
(g83
g64
NtRp1262
(dp1263
g67
(dp1264
sg76
g1249
sg69
(lp1265
g62
(g63
g64
NtRp1266
(dp1267
g67
(dp1268
g75
I4
ssg76
g1262
sg69
(lp1269
S'Rocket 1.2.4'
p1270
asbasbasbag62
(g78
g64
NtRp1271
(dp1272
g67
(dp1273
sg76
g655
sg69
(lp1274
g62
(g83
g64
NtRp1275
(dp1276
g67
(dp1277
g87
g88
ssg76
g1271
sg69
(lp1278
S'web2py_crontype'
p1279
asbag62
(g83
g64
NtRp1280
(dp1281
g67
(dp1282
g94
g95
ssg76
g1271
sg69
(lp1283
S':'
asbag62
(g83
g64
NtRp1284
(dp1285
g67
(dp1286
sg76
g1271
sg69
(lp1287
g62
(g63
g64
NtRp1288
(dp1289
g67
(dp1290
g75
I4
ssg76
g1284
sg69
(lp1291
S'hard'
p1292
asbasbasbag62
(g78
g64
NtRp1293
(dp1294
g67
(dp1295
sg76
g655
sg69
(lp1296
g62
(g83
g64
NtRp1297
(dp1298
g67
(dp1299
g87
g88
ssg76
g1293
sg69
(lp1300
S'web2py_path'
p1301
asbag62
(g83
g64
NtRp1302
(dp1303
g67
(dp1304
g94
g95
ssg76
g1293
sg69
(lp1305
S':'
asbag62
(g83
g64
NtRp1306
(dp1307
g67
(dp1308
sg76
g1293
sg69
(lp1309
g62
(g63
g64
NtRp1310
(dp1311
g67
(dp1312
g75
I4
ssg76
g1306
sg69
(lp1313
g702
asbasbasbag62
(g78
g64
NtRp1314
(dp1315
g67
(dp1316
sg76
g655
sg69
(lp1317
g62
(g83
g64
NtRp1318
(dp1319
g67
(dp1320
g87
g88
ssg76
g1314
sg69
(lp1321
S'web2py_version'
p1322
asbag62
(g83
g64
NtRp1323
(dp1324
g67
(dp1325
g94
g95
ssg76
g1314
sg69
(lp1326
S':'
asbag62
(g83
g64
NtRp1327
(dp1328
g67
(dp1329
sg76
g1314
sg69
(lp1330
g62
(g63
g64
NtRp1331
(dp1332
g67
(dp1333
g75
I4
ssg76
g1327
sg69
(lp1334
g62
(g71
g64
NtRp1335
(dp1336
g67
(dp1337
g75
I3
ssg76
Nsg69
(lp1338
g62
(g78
g64
NtRp1339
(dp1340
g67
(dp1341
sg76
g1335
sg69
(lp1342
g62
(g83
g64
NtRp1343
(dp1344
g67
(dp1345
sg76
g1339
sg69
(lp1346
g62
(g63
g64
NtRp1347
(dp1348
g67
(dp1349
g75
I3
ssg76
g1343
sg69
(lp1350
S'1'
asbasbasbag62
(g78
g64
NtRp1351
(dp1352
g67
(dp1353
sg76
g1335
sg69
(lp1354
g62
(g83
g64
NtRp1355
(dp1356
g67
(dp1357
sg76
g1351
sg69
(lp1358
g62
(g63
g64
NtRp1359
(dp1360
g67
(dp1361
g75
I3
ssg76
g1355
sg69
(lp1362
S'99'
p1363
asbasbasbag62
(g78
g64
NtRp1364
(dp1365
g67
(dp1366
sg76
g1335
sg69
(lp1367
g62
(g83
g64
NtRp1368
(dp1369
g67
(dp1370
sg76
g1364
sg69
(lp1371
g62
(g63
g64
NtRp1372
(dp1373
g67
(dp1374
g75
I3
ssg76
g1368
sg69
(lp1375
S'7'
asbasbasbag62
(g78
g64
NtRp1376
(dp1377
g67
(dp1378
sg76
g1335
sg69
(lp1379
g62
(g83
g64
NtRp1380
(dp1381
g67
(dp1382
sg76
g1376
sg69
(lp1383
g62
(g63
g64
NtRp1384
(dp1385
g67
(dp1386
g75
I3
ssg76
g1380
sg69
(lp1387
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1388
asbasbasbag62
(g78
g64
NtRp1389
(dp1390
g67
(dp1391
sg76
g1335
sg69
(lp1392
g62
(g83
g64
NtRp1393
(dp1394
g67
(dp1395
sg76
g1389
sg69
(lp1396
g62
(g63
g64
NtRp1397
(dp1398
g67
(dp1399
g75
I3
ssg76
g1393
sg69
(lp1400
S'stable'
p1401
asbasbasbasbasbasbasbag62
(g78
g64
NtRp1402
(dp1403
g67
(dp1404
sg76
g655
sg69
(lp1405
g62
(g83
g64
NtRp1406
(dp1407
g67
(dp1408
g87
g88
ssg76
g1402
sg69
(lp1409
S'wsgi_errors'
p1410
asbag62
(g83
g64
NtRp1411
(dp1412
g67
(dp1413
g94
g95
ssg76
g1402
sg69
(lp1414
S':'
asbag62
(g83
g64
NtRp1415
(dp1416
g67
(dp1417
sg76
g1402
sg69
(lp1418
g62
(g63
g64
NtRp1419
(dp1420
g67
(dp1421
g75
I4
ssg76
g1415
sg69
(lp1422
S"<open file '<stderr>', mode 'w' at 0x7fe9895881e0>"
p1423
asbasbasbag62
(g78
g64
NtRp1424
(dp1425
g67
(dp1426
sg76
g655
sg69
(lp1427
g62
(g83
g64
NtRp1428
(dp1429
g67
(dp1430
g87
g88
ssg76
g1424
sg69
(lp1431
S'wsgi_file_wrapper'
p1432
asbag62
(g83
g64
NtRp1433
(dp1434
g67
(dp1435
g94
g95
ssg76
g1424
sg69
(lp1436
S':'
asbag62
(g83
g64
NtRp1437
(dp1438
g67
(dp1439
sg76
g1424
sg69
(lp1440
g62
(g63
g64
NtRp1441
(dp1442
g67
(dp1443
g75
I4
ssg76
g1437
sg69
(lp1444
S'<class wsgiref.util.FileWrapper at 0x7fe985749a10>'
p1445
asbasbasbag62
(g78
g64
NtRp1446
(dp1447
g67
(dp1448
sg76
g655
sg69
(lp1449
g62
(g83
g64
NtRp1450
(dp1451
g67
(dp1452
g87
g88
ssg76
g1446
sg69
(lp1453
S'wsgi_input'
p1454
asbag62
(g83
g64
NtRp1455
(dp1456
g67
(dp1457
g94
g95
ssg76
g1446
sg69
(lp1458
S':'
asbag62
(g83
g64
NtRp1459
(dp1460
g67
(dp1461
sg76
g1446
sg69
(lp1462
g62
(g63
g64
NtRp1463
(dp1464
g67
(dp1465
g75
I4
ssg76
g1459
sg69
(lp1466
S'<socket._fileobject object at 0x7fe91d014250>'
p1467
asbasbasbag62
(g78
g64
NtRp1468
(dp1469
g67
(dp1470
sg76
g655
sg69
(lp1471
g62
(g83
g64
NtRp1472
(dp1473
g67
(dp1474
g87
g88
ssg76
g1468
sg69
(lp1475
S'wsgi_multiprocess'
p1476
asbag62
(g83
g64
NtRp1477
(dp1478
g67
(dp1479
g94
g95
ssg76
g1468
sg69
(lp1480
S':'
asbag62
(g83
g64
NtRp1481
(dp1482
g67
(dp1483
sg76
g1468
sg69
(lp1484
g62
(g63
g64
NtRp1485
(dp1486
g67
(dp1487
g75
I4
ssg76
g1481
sg69
(lp1488
g105
asbasbasbag62
(g78
g64
NtRp1489
(dp1490
g67
(dp1491
sg76
g655
sg69
(lp1492
g62
(g83
g64
NtRp1493
(dp1494
g67
(dp1495
g87
g88
ssg76
g1489
sg69
(lp1496
S'wsgi_multithread'
p1497
asbag62
(g83
g64
NtRp1498
(dp1499
g67
(dp1500
g94
g95
ssg76
g1489
sg69
(lp1501
S':'
asbag62
(g83
g64
NtRp1502
(dp1503
g67
(dp1504
sg76
g1489
sg69
(lp1505
g62
(g63
g64
NtRp1506
(dp1507
g67
(dp1508
g75
I4
ssg76
g1502
sg69
(lp1509
S'True'
p1510
asbasbasbag62
(g78
g64
NtRp1511
(dp1512
g67
(dp1513
sg76
g655
sg69
(lp1514
g62
(g83
g64
NtRp1515
(dp1516
g67
(dp1517
g87
g88
ssg76
g1511
sg69
(lp1518
S'wsgi_run_once'
p1519
asbag62
(g83
g64
NtRp1520
(dp1521
g67
(dp1522
g94
g95
ssg76
g1511
sg69
(lp1523
S':'
asbag62
(g83
g64
NtRp1524
(dp1525
g67
(dp1526
sg76
g1511
sg69
(lp1527
g62
(g63
g64
NtRp1528
(dp1529
g67
(dp1530
g75
I4
ssg76
g1524
sg69
(lp1531
g105
asbasbasbag62
(g78
g64
NtRp1532
(dp1533
g67
(dp1534
sg76
g655
sg69
(lp1535
g62
(g83
g64
NtRp1536
(dp1537
g67
(dp1538
g87
g88
ssg76
g1532
sg69
(lp1539
S'wsgi_url_scheme'
p1540
asbag62
(g83
g64
NtRp1541
(dp1542
g67
(dp1543
g94
g95
ssg76
g1532
sg69
(lp1544
S':'
asbag62
(g83
g64
NtRp1545
(dp1546
g67
(dp1547
sg76
g1532
sg69
(lp1548
g62
(g63
g64
NtRp1549
(dp1550
g67
(dp1551
g75
I4
ssg76
g1545
sg69
(lp1552
S'http'
p1553
asbasbasbag62
(g78
g64
NtRp1554
(dp1555
g67
(dp1556
sg76
g655
sg69
(lp1557
g62
(g83
g64
NtRp1558
(dp1559
g67
(dp1560
g87
g88
ssg76
g1554
sg69
(lp1561
S'wsgi_version'
p1562
asbag62
(g83
g64
NtRp1563
(dp1564
g67
(dp1565
g94
g95
ssg76
g1554
sg69
(lp1566
S':'
asbag62
(g83
g64
NtRp1567
(dp1568
g67
(dp1569
sg76
g1554
sg69
(lp1570
g62
(g63
g64
NtRp1571
(dp1572
g67
(dp1573
g75
I4
ssg76
g1567
sg69
(lp1574
g62
(g71
g64
NtRp1575
(dp1576
g67
(dp1577
g75
I3
ssg76
Nsg69
(lp1578
g62
(g78
g64
NtRp1579
(dp1580
g67
(dp1581
sg76
g1575
sg69
(lp1582
g62
(g83
g64
NtRp1583
(dp1584
g67
(dp1585
sg76
g1579
sg69
(lp1586
g62
(g63
g64
NtRp1587
(dp1588
g67
(dp1589
g75
I3
ssg76
g1583
sg69
(lp1590
S'1'
asbasbasbag62
(g78
g64
NtRp1591
(dp1592
g67
(dp1593
sg76
g1575
sg69
(lp1594
g62
(g83
g64
NtRp1595
(dp1596
g67
(dp1597
sg76
g1591
sg69
(lp1598
g62
(g63
g64
NtRp1599
(dp1600
g67
(dp1601
g75
I3
ssg76
g1595
sg69
(lp1602
S'0'
asbasbasbasbasbasbasbasbasbasbasbag62
(g78
g64
NtRp1603
(dp1604
g67
(dp1605
sg76
g72
sg69
(lp1606
g62
(g83
g64
NtRp1607
(dp1608
g67
(dp1609
g87
g88
ssg76
g1603
sg69
(lp1610
S'extension'
p1611
asbag62
(g83
g64
NtRp1612
(dp1613
g67
(dp1614
g94
g95
ssg76
g1603
sg69
(lp1615
S':'
asbag62
(g83
g64
NtRp1616
(dp1617
g67
(dp1618
sg76
g1603
sg69
(lp1619
g62
(g63
g64
NtRp1620
(dp1621
g67
(dp1622
g75
I5
ssg76
g1616
sg69
(lp1623
S'html'
p1624
asbasbasbag62
(g78
g64
NtRp1625
(dp1626
g67
(dp1627
sg76
g72
sg69
(lp1628
g62
(g83
g64
NtRp1629
(dp1630
g67
(dp1631
g87
g88
ssg76
g1625
sg69
(lp1632
S'folder'
p1633
asbag62
(g83
g64
NtRp1634
(dp1635
g67
(dp1636
g94
g95
ssg76
g1625
sg69
(lp1637
S':'
asbag62
(g83
g64
NtRp1638
(dp1639
g67
(dp1640
sg76
g1625
sg69
(lp1641
g62
(g63
g64
NtRp1642
(dp1643
g67
(dp1644
g75
I5
ssg76
g1638
sg69
(lp1645
S'/home/martin/web2py/applications/admin/'
p1646
asbasbasbag62
(g78
g64
NtRp1647
(dp1648
g67
(dp1649
sg76
g72
sg69
(lp1650
g62
(g83
g64
NtRp1651
(dp1652
g67
(dp1653
g87
g88
ssg76
g1647
sg69
(lp1654
S'function'
p1655
asbag62
(g83
g64
NtRp1656
(dp1657
g67
(dp1658
g94
g95
ssg76
g1647
sg69
(lp1659
S':'
asbag62
(g83
g64
NtRp1660
(dp1661
g67
(dp1662
sg76
g1647
sg69
(lp1663
g62
(g63
g64
NtRp1664
(dp1665
g67
(dp1666
g75
I5
ssg76
g1660
sg69
(lp1667
S'about'
p1668
asbasbasbag62
(g78
g64
NtRp1669
(dp1670
g67
(dp1671
sg76
g72
sg69
(lp1672
g62
(g83
g64
NtRp1673
(dp1674
g67
(dp1675
g87
g88
ssg76
g1669
sg69
(lp1676
S'get_vars'
p1677
asbag62
(g83
g64
NtRp1678
(dp1679
g67
(dp1680
g94
g95
ssg76
g1669
sg69
(lp1681
S':'
asbag62
(g83
g64
NtRp1682
(dp1683
g67
(dp1684
sg76
g1669
sg69
(lp1685
g62
(g63
g64
NtRp1686
(dp1687
g67
(dp1688
g75
I5
ssg76
g1682
sg69
(lp1689
g62
(g71
g64
NtRp1690
(dp1691
g67
(dp1692
g75
I4
ssg76
Nsg69
(lp1693
sbasbasbasbag62
(g78
g64
NtRp1694
(dp1695
g67
(dp1696
sg76
g72
sg69
(lp1697
g62
(g83
g64
NtRp1698
(dp1699
g67
(dp1700
g87
g88
ssg76
g1694
sg69
(lp1701
S'global_settings'
p1702
asbag62
(g83
g64
NtRp1703
(dp1704
g67
(dp1705
g94
g95
ssg76
g1694
sg69
(lp1706
S':'
asbag62
(g83
g64
NtRp1707
(dp1708
g67
(dp1709
sg76
g1694
sg69
(lp1710
g62
(g63
g64
NtRp1711
(dp1712
g67
(dp1713
g75
I5
ssg76
g1707
sg69
(lp1714
g62
(g71
g64
NtRp1715
(dp1716
g67
(dp1717
g75
I4
ssg76
Nsg69
(lp1718
g62
(g78
g64
NtRp1719
(dp1720
g67
(dp1721
sg76
g1715
sg69
(lp1722
g62
(g83
g64
NtRp1723
(dp1724
g67
(dp1725
g87
g88
ssg76
g1719
sg69
(lp1726
g667
asbag62
(g83
g64
NtRp1727
(dp1728
g67
(dp1729
g94
g95
ssg76
g1719
sg69
(lp1730
S':'
asbag62
(g83
g64
NtRp1731
(dp1732
g67
(dp1733
sg76
g1719
sg69
(lp1734
g62
(g63
g64
NtRp1735
(dp1736
g67
(dp1737
g75
I4
ssg76
g1731
sg69
(lp1738
S"set(['/home/martin/web2py/applications/admin/', '/home/martin/web2py/applications/welcome/'])"
p1739
asbasbasbag62
(g78
g64
NtRp1740
(dp1741
g67
(dp1742
sg76
g1715
sg69
(lp1743
g62
(g83
g64
NtRp1744
(dp1745
g67
(dp1746
g87
g88
ssg76
g1740
sg69
(lp1747
g689
asbag62
(g83
g64
NtRp1748
(dp1749
g67
(dp1750
g94
g95
ssg76
g1740
sg69
(lp1751
S':'
asbag62
(g83
g64
NtRp1752
(dp1753
g67
(dp1754
sg76
g1740
sg69
(lp1755
g62
(g63
g64
NtRp1756
(dp1757
g67
(dp1758
g75
I4
ssg76
g1752
sg69
(lp1759
g702
asbasbasbag62
(g78
g64
NtRp1760
(dp1761
g67
(dp1762
sg76
g1715
sg69
(lp1763
g62
(g83
g64
NtRp1764
(dp1765
g67
(dp1766
g87
g88
ssg76
g1760
sg69
(lp1767
g711
asbag62
(g83
g64
NtRp1768
(dp1769
g67
(dp1770
g94
g95
ssg76
g1760
sg69
(lp1771
S':'
asbag62
(g83
g64
NtRp1772
(dp1773
g67
(dp1774
sg76
g1760
sg69
(lp1775
g62
(g63
g64
NtRp1776
(dp1777
g67
(dp1778
g75
I4
ssg76
g1772
sg69
(lp1779
g62
(g71
g64
NtRp1780
(dp1781
g67
(dp1782
g75
I3
ssg76
Nsg69
(lp1783
sbasbasbasbag62
(g78
g64
NtRp1784
(dp1785
g67
(dp1786
sg76
g1715
sg69
(lp1787
g62
(g83
g64
NtRp1788
(dp1789
g67
(dp1790
g87
g88
ssg76
g1784
sg69
(lp1791
g736
asbag62
(g83
g64
NtRp1792
(dp1793
g67
(dp1794
g94
g95
ssg76
g1784
sg69
(lp1795
S':'
asbag62
(g83
g64
NtRp1796
(dp1797
g67
(dp1798
sg76
g1784
sg69
(lp1799
g62
(g63
g64
NtRp1800
(dp1801
g67
(dp1802
g75
I4
ssg76
g1796
sg69
(lp1803
S"<Values at 0x7fe987eb93b0: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'martin-HP-ProBook-6570b', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/home/martin/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1804
asbasbasbag62
(g78
g64
NtRp1805
(dp1806
g67
(dp1807
sg76
g1715
sg69
(lp1808
g62
(g83
g64
NtRp1809
(dp1810
g67
(dp1811
g87
g88
ssg76
g1805
sg69
(lp1812
g758
asbag62
(g83
g64
NtRp1813
(dp1814
g67
(dp1815
g94
g95
ssg76
g1805
sg69
(lp1816
S':'
asbag62
(g83
g64
NtRp1817
(dp1818
g67
(dp1819
sg76
g1805
sg69
(lp1820
g62
(g63
g64
NtRp1821
(dp1822
g67
(dp1823
g75
I4
ssg76
g1817
sg69
(lp1824
S'set([])'
p1825
asbasbasbag62
(g78
g64
NtRp1826
(dp1827
g67
(dp1828
sg76
g1715
sg69
(lp1829
g62
(g83
g64
NtRp1830
(dp1831
g67
(dp1832
g87
g88
ssg76
g1826
sg69
(lp1833
g780
asbag62
(g83
g64
NtRp1834
(dp1835
g67
(dp1836
g94
g95
ssg76
g1826
sg69
(lp1837
S':'
asbag62
(g83
g64
NtRp1838
(dp1839
g67
(dp1840
sg76
g1826
sg69
(lp1841
g62
(g63
g64
NtRp1842
(dp1843
g67
(dp1844
g75
I4
ssg76
g1838
sg69
(lp1845
g105
asbasbasbag62
(g78
g64
NtRp1846
(dp1847
g67
(dp1848
sg76
g1715
sg69
(lp1849
g62
(g83
g64
NtRp1850
(dp1851
g67
(dp1852
g87
g88
ssg76
g1846
sg69
(lp1853
g801
asbag62
(g83
g64
NtRp1854
(dp1855
g67
(dp1856
g94
g95
ssg76
g1846
sg69
(lp1857
S':'
asbag62
(g83
g64
NtRp1858
(dp1859
g67
(dp1860
sg76
g1846
sg69
(lp1861
g62
(g63
g64
NtRp1862
(dp1863
g67
(dp1864
g75
I4
ssg76
g1858
sg69
(lp1865
g814
asbasbasbag62
(g78
g64
NtRp1866
(dp1867
g67
(dp1868
sg76
g1715
sg69
(lp1869
g62
(g83
g64
NtRp1870
(dp1871
g67
(dp1872
g87
g88
ssg76
g1866
sg69
(lp1873
g1020
asbag62
(g83
g64
NtRp1874
(dp1875
g67
(dp1876
g94
g95
ssg76
g1866
sg69
(lp1877
S':'
asbag62
(g83
g64
NtRp1878
(dp1879
g67
(dp1880
sg76
g1866
sg69
(lp1881
g62
(g63
g64
NtRp1882
(dp1883
g67
(dp1884
g75
I4
ssg76
g1878
sg69
(lp1885
g105
asbasbasbag62
(g78
g64
NtRp1886
(dp1887
g67
(dp1888
sg76
g1715
sg69
(lp1889
g62
(g83
g64
NtRp1890
(dp1891
g67
(dp1892
g87
g88
ssg76
g1886
sg69
(lp1893
g1041
asbag62
(g83
g64
NtRp1894
(dp1895
g67
(dp1896
g94
g95
ssg76
g1886
sg69
(lp1897
S':'
asbag62
(g83
g64
NtRp1898
(dp1899
g67
(dp1900
sg76
g1886
sg69
(lp1901
g62
(g63
g64
NtRp1902
(dp1903
g67
(dp1904
g75
I4
ssg76
g1898
sg69
(lp1905
g105
asbasbasbag62
(g78
g64
NtRp1906
(dp1907
g67
(dp1908
sg76
g1715
sg69
(lp1909
g62
(g83
g64
NtRp1910
(dp1911
g67
(dp1912
g87
g88
ssg76
g1906
sg69
(lp1913
g1279
asbag62
(g83
g64
NtRp1914
(dp1915
g67
(dp1916
g94
g95
ssg76
g1906
sg69
(lp1917
S':'
asbag62
(g83
g64
NtRp1918
(dp1919
g67
(dp1920
sg76
g1906
sg69
(lp1921
g62
(g63
g64
NtRp1922
(dp1923
g67
(dp1924
g75
I4
ssg76
g1918
sg69
(lp1925
g1292
asbasbasbag62
(g78
g64
NtRp1926
(dp1927
g67
(dp1928
sg76
g1715
sg69
(lp1929
g62
(g83
g64
NtRp1930
(dp1931
g67
(dp1932
g87
g88
ssg76
g1926
sg69
(lp1933
g1322
asbag62
(g83
g64
NtRp1934
(dp1935
g67
(dp1936
g94
g95
ssg76
g1926
sg69
(lp1937
S':'
asbag62
(g83
g64
NtRp1938
(dp1939
g67
(dp1940
sg76
g1926
sg69
(lp1941
g62
(g63
g64
NtRp1942
(dp1943
g67
(dp1944
g75
I4
ssg76
g1938
sg69
(lp1945
g62
(g71
g64
NtRp1946
(dp1947
g67
(dp1948
g75
I3
ssg76
Nsg69
(lp1949
g62
(g78
g64
NtRp1950
(dp1951
g67
(dp1952
sg76
g1946
sg69
(lp1953
g62
(g83
g64
NtRp1954
(dp1955
g67
(dp1956
sg76
g1950
sg69
(lp1957
g62
(g63
g64
NtRp1958
(dp1959
g67
(dp1960
g75
I3
ssg76
g1954
sg69
(lp1961
S'1'
asbasbasbag62
(g78
g64
NtRp1962
(dp1963
g67
(dp1964
sg76
g1946
sg69
(lp1965
g62
(g83
g64
NtRp1966
(dp1967
g67
(dp1968
sg76
g1962
sg69
(lp1969
g62
(g63
g64
NtRp1970
(dp1971
g67
(dp1972
g75
I3
ssg76
g1966
sg69
(lp1973
S'99'
p1974
asbasbasbag62
(g78
g64
NtRp1975
(dp1976
g67
(dp1977
sg76
g1946
sg69
(lp1978
g62
(g83
g64
NtRp1979
(dp1980
g67
(dp1981
sg76
g1975
sg69
(lp1982
g62
(g63
g64
NtRp1983
(dp1984
g67
(dp1985
g75
I3
ssg76
g1979
sg69
(lp1986
S'7'
asbasbasbag62
(g78
g64
NtRp1987
(dp1988
g67
(dp1989
sg76
g1946
sg69
(lp1990
g62
(g83
g64
NtRp1991
(dp1992
g67
(dp1993
sg76
g1987
sg69
(lp1994
g62
(g63
g64
NtRp1995
(dp1996
g67
(dp1997
g75
I3
ssg76
g1991
sg69
(lp1998
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1999
asbasbasbag62
(g78
g64
NtRp2000
(dp2001
g67
(dp2002
sg76
g1946
sg69
(lp2003
g62
(g83
g64
NtRp2004
(dp2005
g67
(dp2006
sg76
g2000
sg69
(lp2007
g62
(g63
g64
NtRp2008
(dp2009
g67
(dp2010
g75
I3
ssg76
g2004
sg69
(lp2011
g1401
asbasbasbasbasbasbasbasbasbasbasbag62
(g78
g64
NtRp2012
(dp2013
g67
(dp2014
sg76
g72
sg69
(lp2015
g62
(g83
g64
NtRp2016
(dp2017
g67
(dp2018
g87
g88
ssg76
g2012
sg69
(lp2019
S'is_https'
p2020
asbag62
(g83
g64
NtRp2021
(dp2022
g67
(dp2023
g94
g95
ssg76
g2012
sg69
(lp2024
S':'
asbag62
(g83
g64
NtRp2025
(dp2026
g67
(dp2027
sg76
g2012
sg69
(lp2028
g62
(g63
g64
NtRp2029
(dp2030
g67
(dp2031
g75
I5
ssg76
g2025
sg69
(lp2032
g105
asbasbasbag62
(g78
g64
NtRp2033
(dp2034
g67
(dp2035
sg76
g72
sg69
(lp2036
g62
(g83
g64
NtRp2037
(dp2038
g67
(dp2039
g87
g88
ssg76
g2033
sg69
(lp2040
S'is_local'
p2041
asbag62
(g83
g64
NtRp2042
(dp2043
g67
(dp2044
g94
g95
ssg76
g2033
sg69
(lp2045
S':'
asbag62
(g83
g64
NtRp2046
(dp2047
g67
(dp2048
sg76
g2033
sg69
(lp2049
g62
(g63
g64
NtRp2050
(dp2051
g67
(dp2052
g75
I5
ssg76
g2046
sg69
(lp2053
g1510
asbasbasbag62
(g78
g64
NtRp2054
(dp2055
g67
(dp2056
sg76
g72
sg69
(lp2057
g62
(g83
g64
NtRp2058
(dp2059
g67
(dp2060
g87
g88
ssg76
g2054
sg69
(lp2061
S'is_restful'
p2062
asbag62
(g83
g64
NtRp2063
(dp2064
g67
(dp2065
g94
g95
ssg76
g2054
sg69
(lp2066
S':'
asbag62
(g83
g64
NtRp2067
(dp2068
g67
(dp2069
sg76
g2054
sg69
(lp2070
g62
(g63
g64
NtRp2071
(dp2072
g67
(dp2073
g75
I5
ssg76
g2067
sg69
(lp2074
g105
asbasbasbag62
(g78
g64
NtRp2075
(dp2076
g67
(dp2077
sg76
g72
sg69
(lp2078
g62
(g83
g64
NtRp2079
(dp2080
g67
(dp2081
g87
g88
ssg76
g2075
sg69
(lp2082
S'now'
p2083
asbag62
(g83
g64
NtRp2084
(dp2085
g67
(dp2086
g94
g95
ssg76
g2075
sg69
(lp2087
S':'
asbag62
(g83
g64
NtRp2088
(dp2089
g67
(dp2090
sg76
g2075
sg69
(lp2091
g62
(g63
g64
NtRp2092
(dp2093
g67
(dp2094
g75
I5
ssg76
g2088
sg69
(lp2095
S'datetime.datetime(2016, 3, 20, 23, 39, 6, 651733)'
p2096
asbasbasbag62
(g78
g64
NtRp2097
(dp2098
g67
(dp2099
sg76
g72
sg69
(lp2100
g62
(g83
g64
NtRp2101
(dp2102
g67
(dp2103
g87
g88
ssg76
g2097
sg69
(lp2104
S'post_vars'
p2105
asbag62
(g83
g64
NtRp2106
(dp2107
g67
(dp2108
g94
g95
ssg76
g2097
sg69
(lp2109
S':'
asbag62
(g83
g64
NtRp2110
(dp2111
g67
(dp2112
sg76
g2097
sg69
(lp2113
g62
(g63
g64
NtRp2114
(dp2115
g67
(dp2116
g75
I5
ssg76
g2110
sg69
(lp2117
g62
(g71
g64
NtRp2118
(dp2119
g67
(dp2120
g75
I4
ssg76
Nsg69
(lp2121
sbasbasbasbag62
(g78
g64
NtRp2122
(dp2123
g67
(dp2124
sg76
g72
sg69
(lp2125
g62
(g83
g64
NtRp2126
(dp2127
g67
(dp2128
g87
g88
ssg76
g2122
sg69
(lp2129
S'raw_args'
p2130
asbag62
(g83
g64
NtRp2131
(dp2132
g67
(dp2133
g94
g95
ssg76
g2122
sg69
(lp2134
S':'
asbag62
(g83
g64
NtRp2135
(dp2136
g67
(dp2137
sg76
g2122
sg69
(lp2138
g62
(g63
g64
NtRp2139
(dp2140
g67
(dp2141
g75
I5
ssg76
g2135
sg69
(lp2142
g164
asbasbasbag62
(g78
g64
NtRp2143
(dp2144
g67
(dp2145
sg76
g72
sg69
(lp2146
g62
(g83
g64
NtRp2147
(dp2148
g67
(dp2149
g87
g88
ssg76
g2143
sg69
(lp2150
S'url'
p2151
asbag62
(g83
g64
NtRp2152
(dp2153
g67
(dp2154
g94
g95
ssg76
g2143
sg69
(lp2155
S':'
asbag62
(g83
g64
NtRp2156
(dp2157
g67
(dp2158
sg76
g2143
sg69
(lp2159
g62
(g63
g64
NtRp2160
(dp2161
g67
(dp2162
g75
I5
ssg76
g2156
sg69
(lp2163
S'/admin/default/about/examples'
p2164
asbasbasbag62
(g78
g64
NtRp2165
(dp2166
g67
(dp2167
sg76
g72
sg69
(lp2168
g62
(g83
g64
NtRp2169
(dp2170
g67
(dp2171
g87
g88
ssg76
g2165
sg69
(lp2172
S'utcnow'
p2173
asbag62
(g83
g64
NtRp2174
(dp2175
g67
(dp2176
g94
g95
ssg76
g2165
sg69
(lp2177
S':'
asbag62
(g83
g64
NtRp2178
(dp2179
g67
(dp2180
sg76
g2165
sg69
(lp2181
g62
(g63
g64
NtRp2182
(dp2183
g67
(dp2184
g75
I5
ssg76
g2178
sg69
(lp2185
S'datetime.datetime(2016, 3, 20, 20, 39, 6, 651766)'
p2186
asbasbasbag62
(g78
g64
NtRp2187
(dp2188
g67
(dp2189
sg76
g72
sg69
(lp2190
g62
(g83
g64
NtRp2191
(dp2192
g67
(dp2193
g87
g88
ssg76
g2187
sg69
(lp2194
S'uuid'
p2195
asbag62
(g83
g64
NtRp2196
(dp2197
g67
(dp2198
g94
g95
ssg76
g2187
sg69
(lp2199
S':'
asbag62
(g83
g64
NtRp2200
(dp2201
g67
(dp2202
sg76
g2187
sg69
(lp2203
g62
(g63
g64
NtRp2204
(dp2205
g67
(dp2206
g75
I5
ssg76
g2200
sg69
(lp2207
S'admin/127.0.0.1.2016-03-20.23-39-06.787cbe63-df4d-4518-b02e-ce0bba05a67d'
p2208
asbasbasbag62
(g78
g64
NtRp2209
(dp2210
g67
(dp2211
sg76
g72
sg69
(lp2212
g62
(g83
g64
NtRp2213
(dp2214
g67
(dp2215
g87
g88
ssg76
g2209
sg69
(lp2216
S'vars'
p2217
asbag62
(g83
g64
NtRp2218
(dp2219
g67
(dp2220
g94
g95
ssg76
g2209
sg69
(lp2221
S':'
asbag62
(g83
g64
NtRp2222
(dp2223
g67
(dp2224
sg76
g2209
sg69
(lp2225
g62
(g63
g64
NtRp2226
(dp2227
g67
(dp2228
g75
I5
ssg76
g2222
sg69
(lp2229
g62
(g71
g64
NtRp2230
(dp2231
g67
(dp2232
g75
I4
ssg76
Nsg69
(lp2233
sbasbasbasbag62
(g78
g64
NtRp2234
(dp2235
g67
(dp2236
sg76
g72
sg69
(lp2237
g62
(g83
g64
NtRp2238
(dp2239
g67
(dp2240
g87
g88
ssg76
g2234
sg69
(lp2241
S'wsgi'
p2242
asbag62
(g83
g64
NtRp2243
(dp2244
g67
(dp2245
g94
g95
ssg76
g2234
sg69
(lp2246
S':'
asbag62
(g83
g64
NtRp2247
(dp2248
g67
(dp2249
sg76
g2234
sg69
(lp2250
g62
(g63
g64
NtRp2251
(dp2252
g67
(dp2253
g75
I5
ssg76
g2247
sg69
(lp2254
g62
(g71
g64
NtRp2255
(dp2256
g67
(dp2257
g75
I4
ssg76
Nsg69
(lp2258
g62
(g78
g64
NtRp2259
(dp2260
g67
(dp2261
sg76
g2255
sg69
(lp2262
g62
(g83
g64
NtRp2263
(dp2264
g67
(dp2265
g87
g88
ssg76
g2259
sg69
(lp2266
S'environ'
p2267
asbag62
(g83
g64
NtRp2268
(dp2269
g67
(dp2270
g94
g95
ssg76
g2259
sg69
(lp2271
S':'
asbag62
(g83
g64
NtRp2272
(dp2273
g67
(dp2274
sg76
g2259
sg69
(lp2275
g62
(g63
g64
NtRp2276
(dp2277
g67
(dp2278
g75
I4
ssg76
g2272
sg69
(lp2279
g62
(g71
g64
NtRp2280
(dp2281
g67
(dp2282
g75
I3
ssg76
Nsg69
(lp2283
g62
(g78
g64
NtRp2284
(dp2285
g67
(dp2286
sg76
g2280
sg69
(lp2287
g62
(g83
g64
NtRp2288
(dp2289
g67
(dp2290
g87
g88
ssg76
g2284
sg69
(lp2291
S'HTTP_ACCEPT'
p2292
asbag62
(g83
g64
NtRp2293
(dp2294
g67
(dp2295
g94
g95
ssg76
g2284
sg69
(lp2296
S':'
asbag62
(g83
g64
NtRp2297
(dp2298
g67
(dp2299
sg76
g2284
sg69
(lp2300
g62
(g63
g64
NtRp2301
(dp2302
g67
(dp2303
g75
I3
ssg76
g2297
sg69
(lp2304
g836
asbasbasbag62
(g78
g64
NtRp2305
(dp2306
g67
(dp2307
sg76
g2280
sg69
(lp2308
g62
(g83
g64
NtRp2309
(dp2310
g67
(dp2311
g87
g88
ssg76
g2305
sg69
(lp2312
S'HTTP_ACCEPT_ENCODING'
p2313
asbag62
(g83
g64
NtRp2314
(dp2315
g67
(dp2316
g94
g95
ssg76
g2305
sg69
(lp2317
S':'
asbag62
(g83
g64
NtRp2318
(dp2319
g67
(dp2320
sg76
g2305
sg69
(lp2321
g62
(g63
g64
NtRp2322
(dp2323
g67
(dp2324
g75
I3
ssg76
g2318
sg69
(lp2325
g858
asbasbasbag62
(g78
g64
NtRp2326
(dp2327
g67
(dp2328
sg76
g2280
sg69
(lp2329
g62
(g83
g64
NtRp2330
(dp2331
g67
(dp2332
g87
g88
ssg76
g2326
sg69
(lp2333
S'HTTP_ACCEPT_LANGUAGE'
p2334
asbag62
(g83
g64
NtRp2335
(dp2336
g67
(dp2337
g94
g95
ssg76
g2326
sg69
(lp2338
S':'
asbag62
(g83
g64
NtRp2339
(dp2340
g67
(dp2341
sg76
g2326
sg69
(lp2342
g62
(g63
g64
NtRp2343
(dp2344
g67
(dp2345
g75
I3
ssg76
g2339
sg69
(lp2346
g880
asbasbasbag62
(g78
g64
NtRp2347
(dp2348
g67
(dp2349
sg76
g2280
sg69
(lp2350
g62
(g83
g64
NtRp2351
(dp2352
g67
(dp2353
g87
g88
ssg76
g2347
sg69
(lp2354
S'HTTP_CONNECTION'
p2355
asbag62
(g83
g64
NtRp2356
(dp2357
g67
(dp2358
g94
g95
ssg76
g2347
sg69
(lp2359
S':'
asbag62
(g83
g64
NtRp2360
(dp2361
g67
(dp2362
sg76
g2347
sg69
(lp2363
g62
(g63
g64
NtRp2364
(dp2365
g67
(dp2366
g75
I3
ssg76
g2360
sg69
(lp2367
g902
asbasbasbag62
(g78
g64
NtRp2368
(dp2369
g67
(dp2370
sg76
g2280
sg69
(lp2371
g62
(g83
g64
NtRp2372
(dp2373
g67
(dp2374
g87
g88
ssg76
g2368
sg69
(lp2375
S'HTTP_COOKIE'
p2376
asbag62
(g83
g64
NtRp2377
(dp2378
g67
(dp2379
g94
g95
ssg76
g2368
sg69
(lp2380
S':'
asbag62
(g83
g64
NtRp2381
(dp2382
g67
(dp2383
sg76
g2368
sg69
(lp2384
g62
(g63
g64
NtRp2385
(dp2386
g67
(dp2387
g75
I3
ssg76
g2381
sg69
(lp2388
g924
asbasbasbag62
(g78
g64
NtRp2389
(dp2390
g67
(dp2391
sg76
g2280
sg69
(lp2392
g62
(g83
g64
NtRp2393
(dp2394
g67
(dp2395
g87
g88
ssg76
g2389
sg69
(lp2396
S'HTTP_HOST'
p2397
asbag62
(g83
g64
NtRp2398
(dp2399
g67
(dp2400
g94
g95
ssg76
g2389
sg69
(lp2401
S':'
asbag62
(g83
g64
NtRp2402
(dp2403
g67
(dp2404
sg76
g2389
sg69
(lp2405
g62
(g63
g64
NtRp2406
(dp2407
g67
(dp2408
g75
I3
ssg76
g2402
sg69
(lp2409
g946
asbasbasbag62
(g78
g64
NtRp2410
(dp2411
g67
(dp2412
sg76
g2280
sg69
(lp2413
g62
(g83
g64
NtRp2414
(dp2415
g67
(dp2416
g87
g88
ssg76
g2410
sg69
(lp2417
S'HTTP_REFERER'
p2418
asbag62
(g83
g64
NtRp2419
(dp2420
g67
(dp2421
g94
g95
ssg76
g2410
sg69
(lp2422
S':'
asbag62
(g83
g64
NtRp2423
(dp2424
g67
(dp2425
sg76
g2410
sg69
(lp2426
g62
(g63
g64
NtRp2427
(dp2428
g67
(dp2429
g75
I3
ssg76
g2423
sg69
(lp2430
g968
asbasbasbag62
(g78
g64
NtRp2431
(dp2432
g67
(dp2433
sg76
g2280
sg69
(lp2434
g62
(g83
g64
NtRp2435
(dp2436
g67
(dp2437
g87
g88
ssg76
g2431
sg69
(lp2438
S'HTTP_UPGRADE_INSECURE_REQUESTS'
p2439
asbag62
(g83
g64
NtRp2440
(dp2441
g67
(dp2442
g94
g95
ssg76
g2431
sg69
(lp2443
S':'
asbag62
(g83
g64
NtRp2444
(dp2445
g67
(dp2446
sg76
g2431
sg69
(lp2447
g62
(g63
g64
NtRp2448
(dp2449
g67
(dp2450
g75
I3
ssg76
g2444
sg69
(lp2451
S'1'
asbasbasbag62
(g78
g64
NtRp2452
(dp2453
g67
(dp2454
sg76
g2280
sg69
(lp2455
g62
(g83
g64
NtRp2456
(dp2457
g67
(dp2458
g87
g88
ssg76
g2452
sg69
(lp2459
S'HTTP_USER_AGENT'
p2460
asbag62
(g83
g64
NtRp2461
(dp2462
g67
(dp2463
g94
g95
ssg76
g2452
sg69
(lp2464
S':'
asbag62
(g83
g64
NtRp2465
(dp2466
g67
(dp2467
sg76
g2452
sg69
(lp2468
g62
(g63
g64
NtRp2469
(dp2470
g67
(dp2471
g75
I3
ssg76
g2465
sg69
(lp2472
g1011
asbasbasbag62
(g78
g64
NtRp2473
(dp2474
g67
(dp2475
sg76
g2280
sg69
(lp2476
g62
(g83
g64
NtRp2477
(dp2478
g67
(dp2479
g87
g88
ssg76
g2473
sg69
(lp2480
S'PATH_INFO'
p2481
asbag62
(g83
g64
NtRp2482
(dp2483
g67
(dp2484
g94
g95
ssg76
g2473
sg69
(lp2485
S':'
asbag62
(g83
g64
NtRp2486
(dp2487
g67
(dp2488
sg76
g2473
sg69
(lp2489
g62
(g63
g64
NtRp2490
(dp2491
g67
(dp2492
g75
I3
ssg76
g2486
sg69
(lp2493
g1075
asbasbasbag62
(g78
g64
NtRp2494
(dp2495
g67
(dp2496
sg76
g2280
sg69
(lp2497
g62
(g83
g64
NtRp2498
(dp2499
g67
(dp2500
g87
g88
ssg76
g2494
sg69
(lp2501
S'QUERY_STRING'
p2502
asbag62
(g83
g64
NtRp2503
(dp2504
g67
(dp2505
g94
g95
ssg76
g2494
sg69
(lp2506
S':'
asbag62
(g83
g64
NtRp2507
(dp2508
g67
(dp2509
sg76
g2494
sg69
(lp2510
g62
(g63
g64
NtRp2511
(dp2512
g67
(dp2513
g75
I3
ssg76
g2507
sg69
(lp2514
S''
asbasbasbag62
(g78
g64
NtRp2515
(dp2516
g67
(dp2517
sg76
g2280
sg69
(lp2518
g62
(g83
g64
NtRp2519
(dp2520
g67
(dp2521
g87
g88
ssg76
g2515
sg69
(lp2522
S'REMOTE_ADDR'
p2523
asbag62
(g83
g64
NtRp2524
(dp2525
g67
(dp2526
g94
g95
ssg76
g2515
sg69
(lp2527
S':'
asbag62
(g83
g64
NtRp2528
(dp2529
g67
(dp2530
sg76
g2515
sg69
(lp2531
g62
(g63
g64
NtRp2532
(dp2533
g67
(dp2534
g75
I3
ssg76
g2528
sg69
(lp2535
g208
asbasbasbag62
(g78
g64
NtRp2536
(dp2537
g67
(dp2538
sg76
g2280
sg69
(lp2539
g62
(g83
g64
NtRp2540
(dp2541
g67
(dp2542
g87
g88
ssg76
g2536
sg69
(lp2543
S'REMOTE_PORT'
p2544
asbag62
(g83
g64
NtRp2545
(dp2546
g67
(dp2547
g94
g95
ssg76
g2536
sg69
(lp2548
S':'
asbag62
(g83
g64
NtRp2549
(dp2550
g67
(dp2551
sg76
g2536
sg69
(lp2552
g62
(g63
g64
NtRp2553
(dp2554
g67
(dp2555
g75
I3
ssg76
g2549
sg69
(lp2556
g1139
asbasbasbag62
(g78
g64
NtRp2557
(dp2558
g67
(dp2559
sg76
g2280
sg69
(lp2560
g62
(g83
g64
NtRp2561
(dp2562
g67
(dp2563
g87
g88
ssg76
g2557
sg69
(lp2564
S'REQUEST_METHOD'
p2565
asbag62
(g83
g64
NtRp2566
(dp2567
g67
(dp2568
g94
g95
ssg76
g2557
sg69
(lp2569
S':'
asbag62
(g83
g64
NtRp2570
(dp2571
g67
(dp2572
sg76
g2557
sg69
(lp2573
g62
(g63
g64
NtRp2574
(dp2575
g67
(dp2576
g75
I3
ssg76
g2570
sg69
(lp2577
g1161
asbasbasbag62
(g78
g64
NtRp2578
(dp2579
g67
(dp2580
sg76
g2280
sg69
(lp2581
g62
(g83
g64
NtRp2582
(dp2583
g67
(dp2584
g87
g88
ssg76
g2578
sg69
(lp2585
S'SCRIPT_NAME'
p2586
asbag62
(g83
g64
NtRp2587
(dp2588
g67
(dp2589
g94
g95
ssg76
g2578
sg69
(lp2590
S':'
asbag62
(g83
g64
NtRp2591
(dp2592
g67
(dp2593
sg76
g2578
sg69
(lp2594
g62
(g63
g64
NtRp2595
(dp2596
g67
(dp2597
g75
I3
ssg76
g2591
sg69
(lp2598
S''
asbasbasbag62
(g78
g64
NtRp2599
(dp2600
g67
(dp2601
sg76
g2280
sg69
(lp2602
g62
(g83
g64
NtRp2603
(dp2604
g67
(dp2605
g87
g88
ssg76
g2599
sg69
(lp2606
S'SERVER_NAME'
p2607
asbag62
(g83
g64
NtRp2608
(dp2609
g67
(dp2610
g94
g95
ssg76
g2599
sg69
(lp2611
S':'
asbag62
(g83
g64
NtRp2612
(dp2613
g67
(dp2614
sg76
g2599
sg69
(lp2615
g62
(g63
g64
NtRp2616
(dp2617
g67
(dp2618
g75
I3
ssg76
g2612
sg69
(lp2619
g1204
asbasbasbag62
(g78
g64
NtRp2620
(dp2621
g67
(dp2622
sg76
g2280
sg69
(lp2623
g62
(g83
g64
NtRp2624
(dp2625
g67
(dp2626
g87
g88
ssg76
g2620
sg69
(lp2627
S'SERVER_PORT'
p2628
asbag62
(g83
g64
NtRp2629
(dp2630
g67
(dp2631
g94
g95
ssg76
g2620
sg69
(lp2632
S':'
asbag62
(g83
g64
NtRp2633
(dp2634
g67
(dp2635
sg76
g2620
sg69
(lp2636
g62
(g63
g64
NtRp2637
(dp2638
g67
(dp2639
g75
I3
ssg76
g2633
sg69
(lp2640
g1226
asbasbasbag62
(g78
g64
NtRp2641
(dp2642
g67
(dp2643
sg76
g2280
sg69
(lp2644
g62
(g83
g64
NtRp2645
(dp2646
g67
(dp2647
g87
g88
ssg76
g2641
sg69
(lp2648
S'SERVER_PROTOCOL'
p2649
asbag62
(g83
g64
NtRp2650
(dp2651
g67
(dp2652
g94
g95
ssg76
g2641
sg69
(lp2653
S':'
asbag62
(g83
g64
NtRp2654
(dp2655
g67
(dp2656
sg76
g2641
sg69
(lp2657
g62
(g63
g64
NtRp2658
(dp2659
g67
(dp2660
g75
I3
ssg76
g2654
sg69
(lp2661
g1248
asbasbasbag62
(g78
g64
NtRp2662
(dp2663
g67
(dp2664
sg76
g2280
sg69
(lp2665
g62
(g83
g64
NtRp2666
(dp2667
g67
(dp2668
g87
g88
ssg76
g2662
sg69
(lp2669
S'SERVER_SOFTWARE'
p2670
asbag62
(g83
g64
NtRp2671
(dp2672
g67
(dp2673
g94
g95
ssg76
g2662
sg69
(lp2674
S':'
asbag62
(g83
g64
NtRp2675
(dp2676
g67
(dp2677
sg76
g2662
sg69
(lp2678
g62
(g63
g64
NtRp2679
(dp2680
g67
(dp2681
g75
I3
ssg76
g2675
sg69
(lp2682
g1270
asbasbasbag62
(g78
g64
NtRp2683
(dp2684
g67
(dp2685
sg76
g2280
sg69
(lp2686
g62
(g83
g64
NtRp2687
(dp2688
g67
(dp2689
g87
g88
ssg76
g2683
sg69
(lp2690
S'wsgi.errors'
p2691
asbag62
(g83
g64
NtRp2692
(dp2693
g67
(dp2694
g94
g95
ssg76
g2683
sg69
(lp2695
S':'
asbag62
(g83
g64
NtRp2696
(dp2697
g67
(dp2698
sg76
g2683
sg69
(lp2699
g62
(g63
g64
NtRp2700
(dp2701
g67
(dp2702
g75
I3
ssg76
g2696
sg69
(lp2703
S"<open file '<stderr>', mode 'w' at 0x7fe9895881e0>"
p2704
asbasbasbag62
(g78
g64
NtRp2705
(dp2706
g67
(dp2707
sg76
g2280
sg69
(lp2708
g62
(g83
g64
NtRp2709
(dp2710
g67
(dp2711
g87
g88
ssg76
g2705
sg69
(lp2712
S'wsgi.file_wrapper'
p2713
asbag62
(g83
g64
NtRp2714
(dp2715
g67
(dp2716
g94
g95
ssg76
g2705
sg69
(lp2717
S':'
asbag62
(g83
g64
NtRp2718
(dp2719
g67
(dp2720
sg76
g2705
sg69
(lp2721
g62
(g63
g64
NtRp2722
(dp2723
g67
(dp2724
g75
I3
ssg76
g2718
sg69
(lp2725
S'<class wsgiref.util.FileWrapper at 0x7fe985749a10>'
p2726
asbasbasbag62
(g78
g64
NtRp2727
(dp2728
g67
(dp2729
sg76
g2280
sg69
(lp2730
g62
(g83
g64
NtRp2731
(dp2732
g67
(dp2733
g87
g88
ssg76
g2727
sg69
(lp2734
S'wsgi.input'
p2735
asbag62
(g83
g64
NtRp2736
(dp2737
g67
(dp2738
g94
g95
ssg76
g2727
sg69
(lp2739
S':'
asbag62
(g83
g64
NtRp2740
(dp2741
g67
(dp2742
sg76
g2727
sg69
(lp2743
g62
(g63
g64
NtRp2744
(dp2745
g67
(dp2746
g75
I3
ssg76
g2740
sg69
(lp2747
S'<cStringIO.StringO object at 0x7fe91d0b9a78>'
p2748
asbasbasbag62
(g78
g64
NtRp2749
(dp2750
g67
(dp2751
sg76
g2280
sg69
(lp2752
g62
(g83
g64
NtRp2753
(dp2754
g67
(dp2755
g87
g88
ssg76
g2749
sg69
(lp2756
S'wsgi.multiprocess'
p2757
asbag62
(g83
g64
NtRp2758
(dp2759
g67
(dp2760
g94
g95
ssg76
g2749
sg69
(lp2761
S':'
asbag62
(g83
g64
NtRp2762
(dp2763
g67
(dp2764
sg76
g2749
sg69
(lp2765
g62
(g63
g64
NtRp2766
(dp2767
g67
(dp2768
g75
I3
ssg76
g2762
sg69
(lp2769
g105
asbasbasbag62
(g78
g64
NtRp2770
(dp2771
g67
(dp2772
sg76
g2280
sg69
(lp2773
g62
(g83
g64
NtRp2774
(dp2775
g67
(dp2776
g87
g88
ssg76
g2770
sg69
(lp2777
S'wsgi.multithread'
p2778
asbag62
(g83
g64
NtRp2779
(dp2780
g67
(dp2781
g94
g95
ssg76
g2770
sg69
(lp2782
S':'
asbag62
(g83
g64
NtRp2783
(dp2784
g67
(dp2785
sg76
g2770
sg69
(lp2786
g62
(g63
g64
NtRp2787
(dp2788
g67
(dp2789
g75
I3
ssg76
g2783
sg69
(lp2790
g1510
asbasbasbag62
(g78
g64
NtRp2791
(dp2792
g67
(dp2793
sg76
g2280
sg69
(lp2794
g62
(g83
g64
NtRp2795
(dp2796
g67
(dp2797
g87
g88
ssg76
g2791
sg69
(lp2798
S'wsgi.run_once'
p2799
asbag62
(g83
g64
NtRp2800
(dp2801
g67
(dp2802
g94
g95
ssg76
g2791
sg69
(lp2803
S':'
asbag62
(g83
g64
NtRp2804
(dp2805
g67
(dp2806
sg76
g2791
sg69
(lp2807
g62
(g63
g64
NtRp2808
(dp2809
g67
(dp2810
g75
I3
ssg76
g2804
sg69
(lp2811
g105
asbasbasbag62
(g78
g64
NtRp2812
(dp2813
g67
(dp2814
sg76
g2280
sg69
(lp2815
g62
(g83
g64
NtRp2816
(dp2817
g67
(dp2818
g87
g88
ssg76
g2812
sg69
(lp2819
S'wsgi.url_scheme'
p2820
asbag62
(g83
g64
NtRp2821
(dp2822
g67
(dp2823
g94
g95
ssg76
g2812
sg69
(lp2824
S':'
asbag62
(g83
g64
NtRp2825
(dp2826
g67
(dp2827
sg76
g2812
sg69
(lp2828
g62
(g63
g64
NtRp2829
(dp2830
g67
(dp2831
g75
I3
ssg76
g2825
sg69
(lp2832
g1553
asbasbasbag62
(g78
g64
NtRp2833
(dp2834
g67
(dp2835
sg76
g2280
sg69
(lp2836
g62
(g83
g64
NtRp2837
(dp2838
g67
(dp2839
g87
g88
ssg76
g2833
sg69
(lp2840
S'wsgi.version'
p2841
asbag62
(g83
g64
NtRp2842
(dp2843
g67
(dp2844
g94
g95
ssg76
g2833
sg69
(lp2845
S':'
asbag62
(g83
g64
NtRp2846
(dp2847
g67
(dp2848
sg76
g2833
sg69
(lp2849
g62
(g63
g64
NtRp2850
(dp2851
g67
(dp2852
g75
I3
ssg76
g2846
sg69
(lp2853
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2854
(lp2855
(dp2856
S'file'
p2857
S'/usr/lib/pymodules/python2.7/gluon/restricted.py'
p2858
sS'dump'
p2859
(dp2860
S'environment'
p2861
S"{'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'A_button': <function A_button>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p2862
sS'ccode'
p2863
S'<code object <module> at 0x7fe91d091330, file "/...plications/admin/controllers/default.py", line 3>'
p2864
ssS'lnum'
p2865
I205
sS'lines'
p2866
(dp2867
I200
S'    try:'
p2868
sI201
S'        if type(code) == types.CodeType:'
p2869
sI202
S'            ccode = code'
p2870
sI203
S'        else:'
p2871
sI204
S'            ccode = compile2(code,layer)'
p2872
sI205
S'        exec ccode in environment'
p2873
sI206
S'    except HTTP:'
p2874
sI207
S'        raise'
p2875
sI208
S'    except RestrictedError:'
p2876
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2877
ssS'call'
p2878
S'(code="# coding: utf8\\n\\nEXPERIMENTAL_STUFF = True\\n\\nif EX...ite\'))\\n\\n\\n\\nresponse._vars=response._caller(about)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ALLOW_TOGGLE\': \'true\', \'A_button\': <function A_button>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, ...}, layer=\'/home/martin/web2py/applications/admin/controllers/default.py\')'
p2879
sS'func'
p2880
S'restricted'
p2881
sa(dp2882
g2857
S'/home/martin/web2py/applications/admin/controllers/default.py'
p2883
sg2859
(dp2884
sg2865
I1316
sg2866
(dp2885
I1312
S"    redirect(URL('site'))"
p2886
sI1313
S''
sI1314
S''
sI1305
S'    else:'
p2887
sI1306
S'        return dict(form=T("Disabled"))'
p2888
sI1307
S''
sI1308
S'def reload_routes():'
p2889
sI1309
S'    """ Reload routes.py """'
p2890
sI1310
S'    import gluon.rewrite'
p2891
sI1311
S'    gluon.rewrite.load()'
p2892
ssg2878
S'()'
p2893
sg2880
S'<module>'
p2894
sa(dp2895
g2857
S'/usr/lib/pymodules/python2.7/gluon/globals.py'
p2896
sg2859
(dp2897
S'self'
p2898
S'undefined'
p2899
sS'f'
S'<function about>'
p2900
ssg2865
I173
sg2866
(dp2901
I168
S'        self.menu = []             # used by the default view layout'
p2902
sI169
S'        self.files = []            # used by web2py_ajax.html'
p2903
sI170
S'        self.generic_patterns = [] # patterns to allow generic views'
p2904
sI171
S"        self.delimiters = ('{{','}}')"
p2905
sI172
S'        self._vars = None'
p2906
sI173
S'        self._caller = lambda f: f()'
p2907
sI174
S'        self._view_environment = None'
p2908
sI175
S'        self._custom_commit = None'
p2909
sI176
S'        self._custom_rollback = None'
p2910
sI177
S''
ssg2878
S'(f=<function about>)'
p2911
sg2880
S'<lambda>'
p2912
sa(dp2913
g2857
S'/home/martin/web2py/applications/admin/controllers/default.py'
p2914
sg2859
(dp2915
S'global about'
p2916
S'<function about>'
p2917
sS'global request'
p2918
S"<Storage {'body': <cStringIO.StringO object at 0..._vars': <Storage {}>, 'post_vars': <Storage {}>}>"
p2919
sS'app'
p2920
S"'examples'"
p2921
sS'r'
g2899
sS'global apath'
p2922
S'<function apath>'
p2923
sS'global safe_read'
p2924
S'<function safe_read>'
p2925
ssg2865
I641
sg2866
(dp2926
I640
S'    # ## check if file is not there'
p2927
sI641
S"    about = safe_read(apath('%s/ABOUT' % app, r=request))"
p2928
sI642
S"    license = safe_read(apath('%s/LICENSE' % app, r=request))"
p2929
sI643
S'    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))'
p2930
sI644
S''
sI645
S''
sI636
S''
sI637
S'def about():'
p2931
sI638
S'    """ Read about info """'
p2932
sI639
S'    app = get_app()'
p2933
ssg2878
S'()'
p2934
sg2880
S'about'
p2935
sa(dp2936
g2857
S'/home/martin/web2py/applications/admin/controllers/default.py'
p2937
sg2859
(dp2938
S'a'
S"'/home/martin/web2py/applications/examples/ABOUT'"
p2939
sS'safe_file'
p2940
g2899
sS'global safe_open'
p2941
S'<function safe_open>'
p2942
sS'b'
S"'r'"
p2943
ssg2865
I37
sg2866
(dp2944
I32
S'            def write(self,data): pass'
p2945
sI33
S'        return tmp()'
p2946
sI34
S'    return open(a,b)'
p2947
sI35
S''
sI36
S"def safe_read(a, b='r'):"
p2948
sI37
S'    safe_file = safe_open(a, b)'
p2949
sI38
S'    try:'
p2950
sI39
S'        return safe_file.read()'
p2951
sI40
S'    finally:'
p2952
sI41
S'        safe_file.close()'
p2953
ssg2878
S"(a='/home/martin/web2py/applications/examples/ABOUT', b='r')"
p2954
sg2880
S'safe_read'
p2955
sa(dp2956
g2857
S'/home/martin/web2py/applications/admin/controllers/default.py'
p2957
sg2859
(dp2958
S'a'
S"'/home/martin/web2py/applications/examples/ABOUT'"
p2959
sS'builtinopen'
p2960
S'<built-in function open>'
p2961
sS'b'
S"'r'"
p2962
ssg2865
I34
sg2866
(dp2963
I32
S'            def write(self,data): pass'
p2964
sI33
S'        return tmp()'
p2965
sI34
S'    return open(a,b)'
p2966
sI35
S''
sI36
S"def safe_read(a, b='r'):"
p2967
sI37
S'    safe_file = safe_open(a, b)'
p2968
sI38
S'    try:'
p2969
sI29
S'def safe_open(a,b):'
p2970
sI30
S"    if DEMO_MODE and 'w' in b:"
p2971
sI31
S'        class tmp:'
p2972
ssg2878
S"(a='/home/martin/web2py/applications/examples/ABOUT', b='r')"
p2973
sg2880
S'safe_open'
p2974
sasS'pyver'
p2975
S'Python 2.7.6: /usr/bin/python'
p2976
sS'session'
p2977
g62
(g63
g64
NtRp2978
(dp2979
g67
(dp2980
sg69
(lp2981
g62
(g71
g64
NtRp2982
(dp2983
g67
(dp2984
g75
I5
ssg76
Nsg69
(lp2985
g62
(g78
g64
NtRp2986
(dp2987
g67
(dp2988
sg76
g2982
sg69
(lp2989
g62
(g83
g64
NtRp2990
(dp2991
g67
(dp2992
g87
g88
ssg76
g2986
sg69
(lp2993
S'authorized'
p2994
asbag62
(g83
g64
NtRp2995
(dp2996
g67
(dp2997
g94
g95
ssg76
g2986
sg69
(lp2998
S':'
asbag62
(g83
g64
NtRp2999
(dp3000
g67
(dp3001
sg76
g2986
sg69
(lp3002
g62
(g63
g64
NtRp3003
(dp3004
g67
(dp3005
g75
I5
ssg76
g2999
sg69
(lp3006
g1510
asbasbasbag62
(g78
g64
NtRp3007
(dp3008
g67
(dp3009
sg76
g2982
sg69
(lp3010
g62
(g83
g64
NtRp3011
(dp3012
g67
(dp3013
g87
g88
ssg76
g3007
sg69
(lp3014
S'check_version'
p3015
asbag62
(g83
g64
NtRp3016
(dp3017
g67
(dp3018
g94
g95
ssg76
g3007
sg69
(lp3019
S':'
asbag62
(g83
g64
NtRp3020
(dp3021
g67
(dp3022
sg76
g3007
sg69
(lp3023
g62
(g63
g64
NtRp3024
(dp3025
g67
(dp3026
g75
I5
ssg76
g3020
sg69
(lp3027
g105
asbasbasbag62
(g78
g64
NtRp3028
(dp3029
g67
(dp3030
sg76
g2982
sg69
(lp3031
g62
(g83
g64
NtRp3032
(dp3033
g67
(dp3034
g87
g88
ssg76
g3028
sg69
(lp3035
S'last_time'
p3036
asbag62
(g83
g64
NtRp3037
(dp3038
g67
(dp3039
g94
g95
ssg76
g3028
sg69
(lp3040
S':'
asbag62
(g83
g64
NtRp3041
(dp3042
g67
(dp3043
sg76
g3028
sg69
(lp3044
g62
(g63
g64
NtRp3045
(dp3046
g67
(dp3047
g75
I5
ssg76
g3041
sg69
(lp3048
S'1458506346.657579'
p3049
asbasbasbasbasbsS'etype'
p3050
S"<type 'exceptions.IOError'>"
p3051
sS'date'
p3052
S'Sun Mar 20 23:39:06 2016'
p3053
sS'response'
p3054
g62
(g63
g64
NtRp3055
(dp3056
g67
(dp3057
sg69
(lp3058
g62
(g71
g64
NtRp3059
(dp3060
g67
(dp3061
g75
I5
ssg76
Nsg69
(lp3062
g62
(g78
g64
NtRp3063
(dp3064
g67
(dp3065
sg76
g3059
sg69
(lp3066
g62
(g83
g64
NtRp3067
(dp3068
g67
(dp3069
g87
g88
ssg76
g3063
sg69
(lp3070
g173
asbag62
(g83
g64
NtRp3071
(dp3072
g67
(dp3073
g94
g95
ssg76
g3063
sg69
(lp3074
S':'
asbag62
(g83
g64
NtRp3075
(dp3076
g67
(dp3077
sg76
g3063
sg69
(lp3078
g62
(g63
g64
NtRp3079
(dp3080
g67
(dp3081
g75
I5
ssg76
g3075
sg69
(lp3082
S'<cStringIO.StringO object at 0x7fe91d060490>'
p3083
asbasbasbag62
(g78
g64
NtRp3084
(dp3085
g67
(dp3086
sg76
g3059
sg69
(lp3087
g62
(g83
g64
NtRp3088
(dp3089
g67
(dp3090
g87
g88
ssg76
g3084
sg69
(lp3091
g239
asbag62
(g83
g64
NtRp3092
(dp3093
g67
(dp3094
g94
g95
ssg76
g3084
sg69
(lp3095
S':'
asbag62
(g83
g64
NtRp3096
(dp3097
g67
(dp3098
sg76
g3084
sg69
(lp3099
g62
(g63
g64
NtRp3100
(dp3101
g67
(dp3102
g75
I5
ssg76
g3096
sg69
(lp3103
g62
(g71
g64
NtRp3104
(dp3105
g67
(dp3106
g75
I4
ssg76
Nsg69
(lp3107
g62
(g78
g64
NtRp3108
(dp3109
g67
(dp3110
sg76
g3104
sg69
(lp3111
g62
(g83
g64
NtRp3112
(dp3113
g67
(dp3114
g87
g88
ssg76
g3108
sg69
(lp3115
S'session_id_admin'
p3116
asbag62
(g83
g64
NtRp3117
(dp3118
g67
(dp3119
g94
g95
ssg76
g3108
sg69
(lp3120
S':'
asbag62
(g83
g64
NtRp3121
(dp3122
g67
(dp3123
sg76
g3108
sg69
(lp3124
g62
(g63
g64
NtRp3125
(dp3126
g67
(dp3127
g75
I4
ssg76
g3121
sg69
(lp3128
g62
(g71
g64
NtRp3129
(dp3130
g67
(dp3131
g75
I3
ssg76
Nsg69
(lp3132
g62
(g78
g64
NtRp3133
(dp3134
g67
(dp3135
sg76
g3129
sg69
(lp3136
g62
(g83
g64
NtRp3137
(dp3138
g67
(dp3139
g87
g88
ssg76
g3133
sg69
(lp3140
g289
asbag62
(g83
g64
NtRp3141
(dp3142
g67
(dp3143
g94
g95
ssg76
g3133
sg69
(lp3144
S':'
asbag62
(g83
g64
NtRp3145
(dp3146
g67
(dp3147
sg76
g3133
sg69
(lp3148
g62
(g63
g64
NtRp3149
(dp3150
g67
(dp3151
g75
I3
ssg76
g3145
sg69
(lp3152
S''
asbasbasbag62
(g78
g64
NtRp3153
(dp3154
g67
(dp3155
sg76
g3129
sg69
(lp3156
g62
(g83
g64
NtRp3157
(dp3158
g67
(dp3159
g87
g88
ssg76
g3153
sg69
(lp3160
g310
asbag62
(g83
g64
NtRp3161
(dp3162
g67
(dp3163
g94
g95
ssg76
g3153
sg69
(lp3164
S':'
asbag62
(g83
g64
NtRp3165
(dp3166
g67
(dp3167
sg76
g3153
sg69
(lp3168
g62
(g63
g64
NtRp3169
(dp3170
g67
(dp3171
g75
I3
ssg76
g3165
sg69
(lp3172
S''
asbasbasbag62
(g78
g64
NtRp3173
(dp3174
g67
(dp3175
sg76
g3129
sg69
(lp3176
g62
(g83
g64
NtRp3177
(dp3178
g67
(dp3179
g87
g88
ssg76
g3173
sg69
(lp3180
g331
asbag62
(g83
g64
NtRp3181
(dp3182
g67
(dp3183
g94
g95
ssg76
g3173
sg69
(lp3184
S':'
asbag62
(g83
g64
NtRp3185
(dp3186
g67
(dp3187
sg76
g3173
sg69
(lp3188
g62
(g63
g64
NtRp3189
(dp3190
g67
(dp3191
g75
I3
ssg76
g3185
sg69
(lp3192
S''
asbasbasbag62
(g78
g64
NtRp3193
(dp3194
g67
(dp3195
sg76
g3129
sg69
(lp3196
g62
(g83
g64
NtRp3197
(dp3198
g67
(dp3199
g87
g88
ssg76
g3193
sg69
(lp3200
g352
asbag62
(g83
g64
NtRp3201
(dp3202
g67
(dp3203
g94
g95
ssg76
g3193
sg69
(lp3204
S':'
asbag62
(g83
g64
NtRp3205
(dp3206
g67
(dp3207
sg76
g3193
sg69
(lp3208
g62
(g63
g64
NtRp3209
(dp3210
g67
(dp3211
g75
I3
ssg76
g3205
sg69
(lp3212
S''
asbasbasbag62
(g78
g64
NtRp3213
(dp3214
g67
(dp3215
sg76
g3129
sg69
(lp3216
g62
(g83
g64
NtRp3217
(dp3218
g67
(dp3219
g87
g88
ssg76
g3213
sg69
(lp3220
g373
asbag62
(g83
g64
NtRp3221
(dp3222
g67
(dp3223
g94
g95
ssg76
g3213
sg69
(lp3224
S':'
asbag62
(g83
g64
NtRp3225
(dp3226
g67
(dp3227
sg76
g3213
sg69
(lp3228
g62
(g63
g64
NtRp3229
(dp3230
g67
(dp3231
g75
I3
ssg76
g3225
sg69
(lp3232
S''
asbasbasbag62
(g78
g64
NtRp3233
(dp3234
g67
(dp3235
sg76
g3129
sg69
(lp3236
g62
(g83
g64
NtRp3237
(dp3238
g67
(dp3239
g87
g88
ssg76
g3233
sg69
(lp3240
g394
asbag62
(g83
g64
NtRp3241
(dp3242
g67
(dp3243
g94
g95
ssg76
g3233
sg69
(lp3244
S':'
asbag62
(g83
g64
NtRp3245
(dp3246
g67
(dp3247
sg76
g3233
sg69
(lp3248
g62
(g63
g64
NtRp3249
(dp3250
g67
(dp3251
g75
I3
ssg76
g3245
sg69
(lp3252
S'/'
asbasbasbag62
(g78
g64
NtRp3253
(dp3254
g67
(dp3255
sg76
g3129
sg69
(lp3256
g62
(g83
g64
NtRp3257
(dp3258
g67
(dp3259
g87
g88
ssg76
g3253
sg69
(lp3260
g415
asbag62
(g83
g64
NtRp3261
(dp3262
g67
(dp3263
g94
g95
ssg76
g3253
sg69
(lp3264
S':'
asbag62
(g83
g64
NtRp3265
(dp3266
g67
(dp3267
sg76
g3253
sg69
(lp3268
g62
(g63
g64
NtRp3269
(dp3270
g67
(dp3271
g75
I3
ssg76
g3265
sg69
(lp3272
S''
asbasbasbag62
(g78
g64
NtRp3273
(dp3274
g67
(dp3275
sg76
g3129
sg69
(lp3276
g62
(g83
g64
NtRp3277
(dp3278
g67
(dp3279
g87
g88
ssg76
g3273
sg69
(lp3280
g436
asbag62
(g83
g64
NtRp3281
(dp3282
g67
(dp3283
g94
g95
ssg76
g3273
sg69
(lp3284
S':'
asbag62
(g83
g64
NtRp3285
(dp3286
g67
(dp3287
sg76
g3273
sg69
(lp3288
g62
(g63
g64
NtRp3289
(dp3290
g67
(dp3291
g75
I3
ssg76
g3285
sg69
(lp3292
S''
asbasbasbasbasbasbasbasbasbasbasbag62
(g78
g64
NtRp3293
(dp3294
g67
(dp3295
sg76
g3059
sg69
(lp3296
g62
(g83
g64
NtRp3297
(dp3298
g67
(dp3299
g87
g88
ssg76
g3293
sg69
(lp3300
S'delimiters'
p3301
asbag62
(g83
g64
NtRp3302
(dp3303
g67
(dp3304
g94
g95
ssg76
g3293
sg69
(lp3305
S':'
asbag62
(g83
g64
NtRp3306
(dp3307
g67
(dp3308
sg76
g3293
sg69
(lp3309
g62
(g63
g64
NtRp3310
(dp3311
g67
(dp3312
g75
I5
ssg76
g3306
sg69
(lp3313
g62
(g71
g64
NtRp3314
(dp3315
g67
(dp3316
g75
I4
ssg76
Nsg69
(lp3317
g62
(g78
g64
NtRp3318
(dp3319
g67
(dp3320
sg76
g3314
sg69
(lp3321
g62
(g83
g64
NtRp3322
(dp3323
g67
(dp3324
sg76
g3318
sg69
(lp3325
g62
(g63
g64
NtRp3326
(dp3327
g67
(dp3328
g75
I4
ssg76
g3322
sg69
(lp3329
S'{{'
p3330
asbasbasbag62
(g78
g64
NtRp3331
(dp3332
g67
(dp3333
sg76
g3314
sg69
(lp3334
g62
(g83
g64
NtRp3335
(dp3336
g67
(dp3337
sg76
g3331
sg69
(lp3338
g62
(g63
g64
NtRp3339
(dp3340
g67
(dp3341
g75
I4
ssg76
g3335
sg69
(lp3342
S'}}'
p3343
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3344
(dp3345
g67
(dp3346
sg76
g3059
sg69
(lp3347
g62
(g83
g64
NtRp3348
(dp3349
g67
(dp3350
g87
g88
ssg76
g3344
sg69
(lp3351
S'files'
p3352
asbag62
(g83
g64
NtRp3353
(dp3354
g67
(dp3355
g94
g95
ssg76
g3344
sg69
(lp3356
S':'
asbag62
(g83
g64
NtRp3357
(dp3358
g67
(dp3359
sg76
g3344
sg69
(lp3360
g62
(g63
g64
NtRp3361
(dp3362
g67
(dp3363
g75
I5
ssg76
g3357
sg69
(lp3364
g62
(g71
g64
NtRp3365
(dp3366
g67
(dp3367
g75
I4
ssg76
Nsg69
(lp3368
g62
(g78
g64
NtRp3369
(dp3370
g67
(dp3371
sg76
g3365
sg69
(lp3372
g62
(g83
g64
NtRp3373
(dp3374
g67
(dp3375
sg76
g3369
sg69
(lp3376
g62
(g63
g64
NtRp3377
(dp3378
g67
(dp3379
g75
I4
ssg76
g3373
sg69
(lp3380
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3381
asbasbasbag62
(g78
g64
NtRp3382
(dp3383
g67
(dp3384
sg76
g3365
sg69
(lp3385
g62
(g83
g64
NtRp3386
(dp3387
g67
(dp3388
sg76
g3382
sg69
(lp3389
g62
(g63
g64
NtRp3390
(dp3391
g67
(dp3392
g75
I4
ssg76
g3386
sg69
(lp3393
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3394
asbasbasbag62
(g78
g64
NtRp3395
(dp3396
g67
(dp3397
sg76
g3365
sg69
(lp3398
g62
(g83
g64
NtRp3399
(dp3400
g67
(dp3401
sg76
g3395
sg69
(lp3402
g62
(g63
g64
NtRp3403
(dp3404
g67
(dp3405
g75
I4
ssg76
g3399
sg69
(lp3406
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3407
asbasbasbag62
(g78
g64
NtRp3408
(dp3409
g67
(dp3410
sg76
g3365
sg69
(lp3411
g62
(g83
g64
NtRp3412
(dp3413
g67
(dp3414
sg76
g3408
sg69
(lp3415
g62
(g63
g64
NtRp3416
(dp3417
g67
(dp3418
g75
I4
ssg76
g3412
sg69
(lp3419
S'/admin/static/plugin_multiselect/start.js'
p3420
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3421
(dp3422
g67
(dp3423
sg76
g3059
sg69
(lp3424
g62
(g83
g64
NtRp3425
(dp3426
g67
(dp3427
g87
g88
ssg76
g3421
sg69
(lp3428
S'flash'
p3429
asbag62
(g83
g64
NtRp3430
(dp3431
g67
(dp3432
g94
g95
ssg76
g3421
sg69
(lp3433
S':'
asbag62
(g83
g64
NtRp3434
(dp3435
g67
(dp3436
sg76
g3421
sg69
(lp3437
g62
(g63
g64
NtRp3438
(dp3439
g67
(dp3440
g75
I5
ssg76
g3434
sg69
(lp3441
S''
asbasbasbag62
(g78
g64
NtRp3442
(dp3443
g67
(dp3444
sg76
g3059
sg69
(lp3445
g62
(g83
g64
NtRp3446
(dp3447
g67
(dp3448
g87
g88
ssg76
g3442
sg69
(lp3449
S'generic_patterns'
p3450
asbag62
(g83
g64
NtRp3451
(dp3452
g67
(dp3453
g94
g95
ssg76
g3442
sg69
(lp3454
S':'
asbag62
(g83
g64
NtRp3455
(dp3456
g67
(dp3457
sg76
g3442
sg69
(lp3458
g62
(g63
g64
NtRp3459
(dp3460
g67
(dp3461
g75
I5
ssg76
g3455
sg69
(lp3462
g62
(g71
g64
NtRp3463
(dp3464
g67
(dp3465
g75
I4
ssg76
Nsg69
(lp3466
sbasbasbasbag62
(g78
g64
NtRp3467
(dp3468
g67
(dp3469
sg76
g3059
sg69
(lp3470
g62
(g83
g64
NtRp3471
(dp3472
g67
(dp3473
g87
g88
ssg76
g3467
sg69
(lp3474
S'headers'
p3475
asbag62
(g83
g64
NtRp3476
(dp3477
g67
(dp3478
g94
g95
ssg76
g3467
sg69
(lp3479
S':'
asbag62
(g83
g64
NtRp3480
(dp3481
g67
(dp3482
sg76
g3467
sg69
(lp3483
g62
(g63
g64
NtRp3484
(dp3485
g67
(dp3486
g75
I5
ssg76
g3480
sg69
(lp3487
g62
(g71
g64
NtRp3488
(dp3489
g67
(dp3490
g75
I4
ssg76
Nsg69
(lp3491
g62
(g78
g64
NtRp3492
(dp3493
g67
(dp3494
sg76
g3488
sg69
(lp3495
g62
(g83
g64
NtRp3496
(dp3497
g67
(dp3498
g87
g88
ssg76
g3492
sg69
(lp3499
S'Cache-Control'
p3500
asbag62
(g83
g64
NtRp3501
(dp3502
g67
(dp3503
g94
g95
ssg76
g3492
sg69
(lp3504
S':'
asbag62
(g83
g64
NtRp3505
(dp3506
g67
(dp3507
sg76
g3492
sg69
(lp3508
g62
(g63
g64
NtRp3509
(dp3510
g67
(dp3511
g75
I4
ssg76
g3505
sg69
(lp3512
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3513
asbasbasbag62
(g78
g64
NtRp3514
(dp3515
g67
(dp3516
sg76
g3488
sg69
(lp3517
g62
(g83
g64
NtRp3518
(dp3519
g67
(dp3520
g87
g88
ssg76
g3514
sg69
(lp3521
S'Content-Type'
p3522
asbag62
(g83
g64
NtRp3523
(dp3524
g67
(dp3525
g94
g95
ssg76
g3514
sg69
(lp3526
S':'
asbag62
(g83
g64
NtRp3527
(dp3528
g67
(dp3529
sg76
g3514
sg69
(lp3530
g62
(g63
g64
NtRp3531
(dp3532
g67
(dp3533
g75
I4
ssg76
g3527
sg69
(lp3534
S'text/html; charset=utf-8'
p3535
asbasbasbag62
(g78
g64
NtRp3536
(dp3537
g67
(dp3538
sg76
g3488
sg69
(lp3539
g62
(g83
g64
NtRp3540
(dp3541
g67
(dp3542
g87
g88
ssg76
g3536
sg69
(lp3543
S'Expires'
p3544
asbag62
(g83
g64
NtRp3545
(dp3546
g67
(dp3547
g94
g95
ssg76
g3536
sg69
(lp3548
S':'
asbag62
(g83
g64
NtRp3549
(dp3550
g67
(dp3551
sg76
g3536
sg69
(lp3552
g62
(g63
g64
NtRp3553
(dp3554
g67
(dp3555
g75
I4
ssg76
g3549
sg69
(lp3556
S'Dil, 20 Bit 2016 20:39:06 GMT'
p3557
asbasbasbag62
(g78
g64
NtRp3558
(dp3559
g67
(dp3560
sg76
g3488
sg69
(lp3561
g62
(g83
g64
NtRp3562
(dp3563
g67
(dp3564
g87
g88
ssg76
g3558
sg69
(lp3565
S'Pragma'
p3566
asbag62
(g83
g64
NtRp3567
(dp3568
g67
(dp3569
g94
g95
ssg76
g3558
sg69
(lp3570
S':'
asbag62
(g83
g64
NtRp3571
(dp3572
g67
(dp3573
sg76
g3558
sg69
(lp3574
g62
(g63
g64
NtRp3575
(dp3576
g67
(dp3577
g75
I4
ssg76
g3571
sg69
(lp3578
S'no-cache'
p3579
asbasbasbag62
(g78
g64
NtRp3580
(dp3581
g67
(dp3582
sg76
g3488
sg69
(lp3583
g62
(g83
g64
NtRp3584
(dp3585
g67
(dp3586
g87
g88
ssg76
g3580
sg69
(lp3587
S'X-Powered-By'
p3588
asbag62
(g83
g64
NtRp3589
(dp3590
g67
(dp3591
g94
g95
ssg76
g3580
sg69
(lp3592
S':'
asbag62
(g83
g64
NtRp3593
(dp3594
g67
(dp3595
sg76
g3580
sg69
(lp3596
g62
(g63
g64
NtRp3597
(dp3598
g67
(dp3599
g75
I4
ssg76
g3593
sg69
(lp3600
S'web2py'
p3601
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3602
(dp3603
g67
(dp3604
sg76
g3059
sg69
(lp3605
g62
(g83
g64
NtRp3606
(dp3607
g67
(dp3608
g87
g88
ssg76
g3602
sg69
(lp3609
S'menu'
p3610
asbag62
(g83
g64
NtRp3611
(dp3612
g67
(dp3613
g94
g95
ssg76
g3602
sg69
(lp3614
S':'
asbag62
(g83
g64
NtRp3615
(dp3616
g67
(dp3617
sg76
g3602
sg69
(lp3618
g62
(g63
g64
NtRp3619
(dp3620
g67
(dp3621
g75
I5
ssg76
g3615
sg69
(lp3622
g62
(g71
g64
NtRp3623
(dp3624
g67
(dp3625
g75
I4
ssg76
Nsg69
(lp3626
g62
(g78
g64
NtRp3627
(dp3628
g67
(dp3629
sg76
g3623
sg69
(lp3630
g62
(g83
g64
NtRp3631
(dp3632
g67
(dp3633
sg76
g3627
sg69
(lp3634
g62
(g63
g64
NtRp3635
(dp3636
g67
(dp3637
g75
I4
ssg76
g3631
sg69
(lp3638
g62
(g71
g64
NtRp3639
(dp3640
g67
(dp3641
g75
I3
ssg76
Nsg69
(lp3642
g62
(g78
g64
NtRp3643
(dp3644
g67
(dp3645
sg76
g3639
sg69
(lp3646
g62
(g83
g64
NtRp3647
(dp3648
g67
(dp3649
sg76
g3643
sg69
(lp3650
g62
(g63
g64
NtRp3651
(dp3652
g67
(dp3653
g75
I3
ssg76
g3647
sg69
(lp3654
cgluon.languages
lazyT_unpickle
p3655
(S't\x04\x00\x00\x00Site'
tRp3656
asbasbasbag62
(g78
g64
NtRp3657
(dp3658
g67
(dp3659
sg76
g3639
sg69
(lp3660
g62
(g83
g64
NtRp3661
(dp3662
g67
(dp3663
sg76
g3657
sg69
(lp3664
g62
(g63
g64
NtRp3665
(dp3666
g67
(dp3667
g75
I3
ssg76
g3661
sg69
(lp3668
g105
asbasbasbag62
(g78
g64
NtRp3669
(dp3670
g67
(dp3671
sg76
g3639
sg69
(lp3672
g62
(g83
g64
NtRp3673
(dp3674
g67
(dp3675
sg76
g3669
sg69
(lp3676
g62
(g63
g64
NtRp3677
(dp3678
g67
(dp3679
g75
I3
ssg76
g3673
sg69
(lp3680
S'/admin/default/site'
p3681
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3682
(dp3683
g67
(dp3684
sg76
g3623
sg69
(lp3685
g62
(g83
g64
NtRp3686
(dp3687
g67
(dp3688
sg76
g3682
sg69
(lp3689
g62
(g63
g64
NtRp3690
(dp3691
g67
(dp3692
g75
I4
ssg76
g3686
sg69
(lp3693
g62
(g71
g64
NtRp3694
(dp3695
g67
(dp3696
g75
I3
ssg76
Nsg69
(lp3697
g62
(g78
g64
NtRp3698
(dp3699
g67
(dp3700
sg76
g3694
sg69
(lp3701
g62
(g83
g64
NtRp3702
(dp3703
g67
(dp3704
sg76
g3698
sg69
(lp3705
g62
(g63
g64
NtRp3706
(dp3707
g67
(dp3708
g75
I3
ssg76
g3702
sg69
(lp3709
g3655
(S't\x04\x00\x00\x00Edit'
tRp3710
asbasbasbag62
(g78
g64
NtRp3711
(dp3712
g67
(dp3713
sg76
g3694
sg69
(lp3714
g62
(g83
g64
NtRp3715
(dp3716
g67
(dp3717
sg76
g3711
sg69
(lp3718
g62
(g63
g64
NtRp3719
(dp3720
g67
(dp3721
g75
I3
ssg76
g3715
sg69
(lp3722
g105
asbasbasbag62
(g78
g64
NtRp3723
(dp3724
g67
(dp3725
sg76
g3694
sg69
(lp3726
g62
(g83
g64
NtRp3727
(dp3728
g67
(dp3729
sg76
g3723
sg69
(lp3730
g62
(g63
g64
NtRp3731
(dp3732
g67
(dp3733
g75
I3
ssg76
g3727
sg69
(lp3734
S'/admin/default/design/examples'
p3735
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3736
(dp3737
g67
(dp3738
sg76
g3623
sg69
(lp3739
g62
(g83
g64
NtRp3740
(dp3741
g67
(dp3742
sg76
g3736
sg69
(lp3743
g62
(g63
g64
NtRp3744
(dp3745
g67
(dp3746
g75
I4
ssg76
g3740
sg69
(lp3747
g62
(g71
g64
NtRp3748
(dp3749
g67
(dp3750
g75
I3
ssg76
Nsg69
(lp3751
g62
(g78
g64
NtRp3752
(dp3753
g67
(dp3754
sg76
g3748
sg69
(lp3755
g62
(g83
g64
NtRp3756
(dp3757
g67
(dp3758
sg76
g3752
sg69
(lp3759
g62
(g63
g64
NtRp3760
(dp3761
g67
(dp3762
g75
I3
ssg76
g3756
sg69
(lp3763
g3655
(S't\x05\x00\x00\x00About'
tRp3764
asbasbasbag62
(g78
g64
NtRp3765
(dp3766
g67
(dp3767
sg76
g3748
sg69
(lp3768
g62
(g83
g64
NtRp3769
(dp3770
g67
(dp3771
sg76
g3765
sg69
(lp3772
g62
(g63
g64
NtRp3773
(dp3774
g67
(dp3775
g75
I3
ssg76
g3769
sg69
(lp3776
g1510
asbasbasbag62
(g78
g64
NtRp3777
(dp3778
g67
(dp3779
sg76
g3748
sg69
(lp3780
g62
(g83
g64
NtRp3781
(dp3782
g67
(dp3783
sg76
g3777
sg69
(lp3784
g62
(g63
g64
NtRp3785
(dp3786
g67
(dp3787
g75
I3
ssg76
g3781
sg69
(lp3788
S'/admin/default/about/examples'
p3789
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3790
(dp3791
g67
(dp3792
sg76
g3623
sg69
(lp3793
g62
(g83
g64
NtRp3794
(dp3795
g67
(dp3796
sg76
g3790
sg69
(lp3797
g62
(g63
g64
NtRp3798
(dp3799
g67
(dp3800
g75
I4
ssg76
g3794
sg69
(lp3801
g62
(g71
g64
NtRp3802
(dp3803
g67
(dp3804
g75
I3
ssg76
Nsg69
(lp3805
g62
(g78
g64
NtRp3806
(dp3807
g67
(dp3808
sg76
g3802
sg69
(lp3809
g62
(g83
g64
NtRp3810
(dp3811
g67
(dp3812
sg76
g3806
sg69
(lp3813
g62
(g63
g64
NtRp3814
(dp3815
g67
(dp3816
g75
I3
ssg76
g3810
sg69
(lp3817
g3655
(S't\x06\x00\x00\x00Errors'
tRp3818
asbasbasbag62
(g78
g64
NtRp3819
(dp3820
g67
(dp3821
sg76
g3802
sg69
(lp3822
g62
(g83
g64
NtRp3823
(dp3824
g67
(dp3825
sg76
g3819
sg69
(lp3826
g62
(g63
g64
NtRp3827
(dp3828
g67
(dp3829
g75
I3
ssg76
g3823
sg69
(lp3830
g105
asbasbasbag62
(g78
g64
NtRp3831
(dp3832
g67
(dp3833
sg76
g3802
sg69
(lp3834
g62
(g83
g64
NtRp3835
(dp3836
g67
(dp3837
sg76
g3831
sg69
(lp3838
g62
(g63
g64
NtRp3839
(dp3840
g67
(dp3841
g75
I3
ssg76
g3835
sg69
(lp3842
S'/admin/default/errors/examples'
p3843
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3844
(dp3845
g67
(dp3846
sg76
g3623
sg69
(lp3847
g62
(g83
g64
NtRp3848
(dp3849
g67
(dp3850
sg76
g3844
sg69
(lp3851
g62
(g63
g64
NtRp3852
(dp3853
g67
(dp3854
g75
I4
ssg76
g3848
sg69
(lp3855
g62
(g71
g64
NtRp3856
(dp3857
g67
(dp3858
g75
I3
ssg76
Nsg69
(lp3859
g62
(g78
g64
NtRp3860
(dp3861
g67
(dp3862
sg76
g3856
sg69
(lp3863
g62
(g83
g64
NtRp3864
(dp3865
g67
(dp3866
sg76
g3860
sg69
(lp3867
g62
(g63
g64
NtRp3868
(dp3869
g67
(dp3870
g75
I3
ssg76
g3864
sg69
(lp3871
g3655
(S't\n\x00\x00\x00Versioning'
tRp3872
asbasbasbag62
(g78
g64
NtRp3873
(dp3874
g67
(dp3875
sg76
g3856
sg69
(lp3876
g62
(g83
g64
NtRp3877
(dp3878
g67
(dp3879
sg76
g3873
sg69
(lp3880
g62
(g63
g64
NtRp3881
(dp3882
g67
(dp3883
g75
I3
ssg76
g3877
sg69
(lp3884
g105
asbasbasbag62
(g78
g64
NtRp3885
(dp3886
g67
(dp3887
sg76
g3856
sg69
(lp3888
g62
(g83
g64
NtRp3889
(dp3890
g67
(dp3891
sg76
g3885
sg69
(lp3892
g62
(g63
g64
NtRp3893
(dp3894
g67
(dp3895
g75
I3
ssg76
g3889
sg69
(lp3896
S'/admin/mercurial/commit/examples'
p3897
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3898
(dp3899
g67
(dp3900
sg76
g3623
sg69
(lp3901
g62
(g83
g64
NtRp3902
(dp3903
g67
(dp3904
sg76
g3898
sg69
(lp3905
g62
(g63
g64
NtRp3906
(dp3907
g67
(dp3908
g75
I4
ssg76
g3902
sg69
(lp3909
g62
(g71
g64
NtRp3910
(dp3911
g67
(dp3912
g75
I3
ssg76
Nsg69
(lp3913
g62
(g78
g64
NtRp3914
(dp3915
g67
(dp3916
sg76
g3910
sg69
(lp3917
g62
(g83
g64
NtRp3918
(dp3919
g67
(dp3920
sg76
g3914
sg69
(lp3921
g62
(g63
g64
NtRp3922
(dp3923
g67
(dp3924
g75
I3
ssg76
g3918
sg69
(lp3925
g3655
(S't\x06\x00\x00\x00Logout'
tRp3926
asbasbasbag62
(g78
g64
NtRp3927
(dp3928
g67
(dp3929
sg76
g3910
sg69
(lp3930
g62
(g83
g64
NtRp3931
(dp3932
g67
(dp3933
sg76
g3927
sg69
(lp3934
g62
(g63
g64
NtRp3935
(dp3936
g67
(dp3937
g75
I3
ssg76
g3931
sg69
(lp3938
g105
asbasbasbag62
(g78
g64
NtRp3939
(dp3940
g67
(dp3941
sg76
g3910
sg69
(lp3942
g62
(g83
g64
NtRp3943
(dp3944
g67
(dp3945
sg76
g3939
sg69
(lp3946
g62
(g63
g64
NtRp3947
(dp3948
g67
(dp3949
g75
I3
ssg76
g3943
sg69
(lp3950
S'/admin/default/logout'
p3951
asbasbasbasbasbasbasbag62
(g78
g64
NtRp3952
(dp3953
g67
(dp3954
sg76
g3623
sg69
(lp3955
g62
(g83
g64
NtRp3956
(dp3957
g67
(dp3958
sg76
g3952
sg69
(lp3959
g62
(g63
g64
NtRp3960
(dp3961
g67
(dp3962
g75
I4
ssg76
g3956
sg69
(lp3963
g62
(g71
g64
NtRp3964
(dp3965
g67
(dp3966
g75
I3
ssg76
Nsg69
(lp3967
g62
(g78
g64
NtRp3968
(dp3969
g67
(dp3970
sg76
g3964
sg69
(lp3971
g62
(g83
g64
NtRp3972
(dp3973
g67
(dp3974
sg76
g3968
sg69
(lp3975
g62
(g63
g64
NtRp3976
(dp3977
g67
(dp3978
g75
I3
ssg76
g3972
sg69
(lp3979
g3655
(S't\x05\x00\x00\x00Debug'
tRp3980
asbasbasbag62
(g78
g64
NtRp3981
(dp3982
g67
(dp3983
sg76
g3964
sg69
(lp3984
g62
(g83
g64
NtRp3985
(dp3986
g67
(dp3987
sg76
g3981
sg69
(lp3988
g62
(g63
g64
NtRp3989
(dp3990
g67
(dp3991
g75
I3
ssg76
g3985
sg69
(lp3992
g105
asbasbasbag62
(g78
g64
NtRp3993
(dp3994
g67
(dp3995
sg76
g3964
sg69
(lp3996
g62
(g83
g64
NtRp3997
(dp3998
g67
(dp3999
sg76
g3993
sg69
(lp4000
g62
(g63
g64
NtRp4001
(dp4002
g67
(dp4003
g75
I3
ssg76
g3997
sg69
(lp4004
S'/admin/debug/interact'
p4005
asbasbasbasbasbasbasbag62
(g78
g64
NtRp4006
(dp4007
g67
(dp4008
sg76
g3623
sg69
(lp4009
g62
(g83
g64
NtRp4010
(dp4011
g67
(dp4012
sg76
g4006
sg69
(lp4013
g62
(g63
g64
NtRp4014
(dp4015
g67
(dp4016
g75
I4
ssg76
g4010
sg69
(lp4017
g62
(g71
g64
NtRp4018
(dp4019
g67
(dp4020
g75
I3
ssg76
Nsg69
(lp4021
g62
(g78
g64
NtRp4022
(dp4023
g67
(dp4024
sg76
g4018
sg69
(lp4025
g62
(g83
g64
NtRp4026
(dp4027
g67
(dp4028
sg76
g4022
sg69
(lp4029
g62
(g63
g64
NtRp4030
(dp4031
g67
(dp4032
g75
I3
ssg76
g4026
sg69
(lp4033
g3655
(S't\x04\x00\x00\x00Help'
tRp4034
asbasbasbag62
(g78
g64
NtRp4035
(dp4036
g67
(dp4037
sg76
g4018
sg69
(lp4038
g62
(g83
g64
NtRp4039
(dp4040
g67
(dp4041
sg76
g4035
sg69
(lp4042
g62
(g63
g64
NtRp4043
(dp4044
g67
(dp4045
g75
I3
ssg76
g4039
sg69
(lp4046
g105
asbasbasbag62
(g78
g64
NtRp4047
(dp4048
g67
(dp4049
sg76
g4018
sg69
(lp4050
g62
(g83
g64
NtRp4051
(dp4052
g67
(dp4053
sg76
g4047
sg69
(lp4054
g62
(g63
g64
NtRp4055
(dp4056
g67
(dp4057
g75
I3
ssg76
g4051
sg69
(lp4058
S'/examples/default/index'
p4059
asbasbasbasbasbasbasbasbasbasbasbag62
(g78
g64
NtRp4060
(dp4061
g67
(dp4062
sg76
g3059
sg69
(lp4063
g62
(g83
g64
NtRp4064
(dp4065
g67
(dp4066
g87
g88
ssg76
g4060
sg69
(lp4067
S'meta'
p4068
asbag62
(g83
g64
NtRp4069
(dp4070
g67
(dp4071
g94
g95
ssg76
g4060
sg69
(lp4072
S':'
asbag62
(g83
g64
NtRp4073
(dp4074
g67
(dp4075
sg76
g4060
sg69
(lp4076
g62
(g63
g64
NtRp4077
(dp4078
g67
(dp4079
g75
I5
ssg76
g4073
sg69
(lp4080
g62
(g71
g64
NtRp4081
(dp4082
g67
(dp4083
g75
I4
ssg76
Nsg69
(lp4084
sbasbasbasbag62
(g78
g64
NtRp4085
(dp4086
g67
(dp4087
sg76
g3059
sg69
(lp4088
g62
(g83
g64
NtRp4089
(dp4090
g67
(dp4091
g87
g88
ssg76
g4085
sg69
(lp4092
S'postprocessing'
p4093
asbag62
(g83
g64
NtRp4094
(dp4095
g67
(dp4096
g94
g95
ssg76
g4085
sg69
(lp4097
S':'
asbag62
(g83
g64
NtRp4098
(dp4099
g67
(dp4100
sg76
g4085
sg69
(lp4101
g62
(g63
g64
NtRp4102
(dp4103
g67
(dp4104
g75
I5
ssg76
g4098
sg69
(lp4105
g62
(g71
g64
NtRp4106
(dp4107
g67
(dp4108
g75
I4
ssg76
Nsg69
(lp4109
sbasbasbasbag62
(g78
g64
NtRp4110
(dp4111
g67
(dp4112
sg76
g3059
sg69
(lp4113
g62
(g83
g64
NtRp4114
(dp4115
g67
(dp4116
g87
g88
ssg76
g4110
sg69
(lp4117
S'session_file'
p4118
asbag62
(g83
g64
NtRp4119
(dp4120
g67
(dp4121
g94
g95
ssg76
g4110
sg69
(lp4122
S':'
asbag62
(g83
g64
NtRp4123
(dp4124
g67
(dp4125
sg76
g4110
sg69
(lp4126
g62
(g63
g64
NtRp4127
(dp4128
g67
(dp4129
g75
I5
ssg76
g4123
sg69
(lp4130
S"<open file '/home/martin/web2py/applications/admin/sessions/127.0.0.1-82be6782-0dbc-42e8-9507-48574f459297', mode 'rb+' at 0x7fe91cf8ca50>"
p4131
asbasbasbag62
(g78
g64
NtRp4132
(dp4133
g67
(dp4134
sg76
g3059
sg69
(lp4135
g62
(g83
g64
NtRp4136
(dp4137
g67
(dp4138
g87
g88
ssg76
g4132
sg69
(lp4139
S'session_filename'
p4140
asbag62
(g83
g64
NtRp4141
(dp4142
g67
(dp4143
g94
g95
ssg76
g4132
sg69
(lp4144
S':'
asbag62
(g83
g64
NtRp4145
(dp4146
g67
(dp4147
sg76
g4132
sg69
(lp4148
g62
(g63
g64
NtRp4149
(dp4150
g67
(dp4151
g75
I5
ssg76
g4145
sg69
(lp4152
S'/home/martin/web2py/applications/admin/sessions/127.0.0.1-82be6782-0dbc-42e8-9507-48574f459297'
p4153
asbasbasbag62
(g78
g64
NtRp4154
(dp4155
g67
(dp4156
sg76
g3059
sg69
(lp4157
g62
(g83
g64
NtRp4158
(dp4159
g67
(dp4160
g87
g88
ssg76
g4154
sg69
(lp4161
S'session_id'
p4162
asbag62
(g83
g64
NtRp4163
(dp4164
g67
(dp4165
g94
g95
ssg76
g4154
sg69
(lp4166
S':'
asbag62
(g83
g64
NtRp4167
(dp4168
g67
(dp4169
sg76
g4154
sg69
(lp4170
g62
(g63
g64
NtRp4171
(dp4172
g67
(dp4173
g75
I5
ssg76
g4167
sg69
(lp4174
S'127.0.0.1-82be6782-0dbc-42e8-9507-48574f459297'
p4175
asbasbasbag62
(g78
g64
NtRp4176
(dp4177
g67
(dp4178
sg76
g3059
sg69
(lp4179
g62
(g83
g64
NtRp4180
(dp4181
g67
(dp4182
g87
g88
ssg76
g4176
sg69
(lp4183
S'session_id_name'
p4184
asbag62
(g83
g64
NtRp4185
(dp4186
g67
(dp4187
g94
g95
ssg76
g4176
sg69
(lp4188
S':'
asbag62
(g83
g64
NtRp4189
(dp4190
g67
(dp4191
sg76
g4176
sg69
(lp4192
g62
(g63
g64
NtRp4193
(dp4194
g67
(dp4195
g75
I5
ssg76
g4189
sg69
(lp4196
g3116
asbasbasbag62
(g78
g64
NtRp4197
(dp4198
g67
(dp4199
sg76
g3059
sg69
(lp4200
g62
(g83
g64
NtRp4201
(dp4202
g67
(dp4203
g87
g88
ssg76
g4197
sg69
(lp4204
S'session_locked'
p4205
asbag62
(g83
g64
NtRp4206
(dp4207
g67
(dp4208
g94
g95
ssg76
g4197
sg69
(lp4209
S':'
asbag62
(g83
g64
NtRp4210
(dp4211
g67
(dp4212
sg76
g4197
sg69
(lp4213
g62
(g63
g64
NtRp4214
(dp4215
g67
(dp4216
g75
I5
ssg76
g4210
sg69
(lp4217
g1510
asbasbasbag62
(g78
g64
NtRp4218
(dp4219
g67
(dp4220
sg76
g3059
sg69
(lp4221
g62
(g83
g64
NtRp4222
(dp4223
g67
(dp4224
g87
g88
ssg76
g4218
sg69
(lp4225
S'session_new'
p4226
asbag62
(g83
g64
NtRp4227
(dp4228
g67
(dp4229
g94
g95
ssg76
g4218
sg69
(lp4230
S':'
asbag62
(g83
g64
NtRp4231
(dp4232
g67
(dp4233
sg76
g4218
sg69
(lp4234
g62
(g63
g64
NtRp4235
(dp4236
g67
(dp4237
g75
I5
ssg76
g4231
sg69
(lp4238
g105
asbasbasbag62
(g78
g64
NtRp4239
(dp4240
g67
(dp4241
sg76
g3059
sg69
(lp4242
g62
(g83
g64
NtRp4243
(dp4244
g67
(dp4245
g87
g88
ssg76
g4239
sg69
(lp4246
S'status'
p4247
asbag62
(g83
g64
NtRp4248
(dp4249
g67
(dp4250
g94
g95
ssg76
g4239
sg69
(lp4251
S':'
asbag62
(g83
g64
NtRp4252
(dp4253
g67
(dp4254
sg76
g4239
sg69
(lp4255
g62
(g63
g64
NtRp4256
(dp4257
g67
(dp4258
g75
I5
ssg76
g4252
sg69
(lp4259
S'200'
p4260
asbasbasbag62
(g78
g64
NtRp4261
(dp4262
g67
(dp4263
sg76
g3059
sg69
(lp4264
g62
(g83
g64
NtRp4265
(dp4266
g67
(dp4267
g87
g88
ssg76
g4261
sg69
(lp4268
S'subtitle'
p4269
asbag62
(g83
g64
NtRp4270
(dp4271
g67
(dp4272
g94
g95
ssg76
g4261
sg69
(lp4273
S':'
asbag62
(g83
g64
NtRp4274
(dp4275
g67
(dp4276
sg76
g4261
sg69
(lp4277
g62
(g63
g64
NtRp4278
(dp4279
g67
(dp4280
g75
I5
ssg76
g4274
sg69
(lp4281
S'admin'
p4282
asbasbasbag62
(g78
g64
NtRp4283
(dp4284
g67
(dp4285
sg76
g3059
sg69
(lp4286
g62
(g83
g64
NtRp4287
(dp4288
g67
(dp4289
g87
g88
ssg76
g4283
sg69
(lp4290
S'title'
p4291
asbag62
(g83
g64
NtRp4292
(dp4293
g67
(dp4294
g94
g95
ssg76
g4283
sg69
(lp4295
S':'
asbag62
(g83
g64
NtRp4296
(dp4297
g67
(dp4298
sg76
g4283
sg69
(lp4299
g62
(g63
g64
NtRp4300
(dp4301
g67
(dp4302
g75
I5
ssg76
g4296
sg69
(lp4303
S'about examples'
p4304
asbasbasbag62
(g78
g64
NtRp4305
(dp4306
g67
(dp4307
sg76
g3059
sg69
(lp4308
g62
(g83
g64
NtRp4309
(dp4310
g67
(dp4311
g87
g88
ssg76
g4305
sg69
(lp4312
g2195
asbag62
(g83
g64
NtRp4313
(dp4314
g67
(dp4315
g94
g95
ssg76
g4305
sg69
(lp4316
S':'
asbag62
(g83
g64
NtRp4317
(dp4318
g67
(dp4319
sg76
g4305
sg69
(lp4320
g62
(g63
g64
NtRp4321
(dp4322
g67
(dp4323
g75
I5
ssg76
g4317
sg69
(lp4324
g2208
asbasbasbag62
(g78
g64
NtRp4325
(dp4326
g67
(dp4327
sg76
g3059
sg69
(lp4328
g62
(g83
g64
NtRp4329
(dp4330
g67
(dp4331
g87
g88
ssg76
g4325
sg69
(lp4332
S'view'
p4333
asbag62
(g83
g64
NtRp4334
(dp4335
g67
(dp4336
g94
g95
ssg76
g4325
sg69
(lp4337
S':'
asbag62
(g83
g64
NtRp4338
(dp4339
g67
(dp4340
sg76
g4325
sg69
(lp4341
g62
(g63
g64
NtRp4342
(dp4343
g67
(dp4344
g75
I5
ssg76
g4338
sg69
(lp4345
S'default/about.html'
p4346
asbasbasbasbasbsS'locals'
p4347
(dp4348
S'a'
S"'/home/martin/web2py/applications/examples/ABOUT'"
p4349
sS'b'
S"'r'"
p4350
sssS'traceback'
p4351
S'Traceback (most recent call last):\n  File "/usr/lib/pymodules/python2.7/gluon/restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "/home/martin/web2py/applications/admin/controllers/default.py", line 1316, in <module>\n  File "/usr/lib/pymodules/python2.7/gluon/globals.py", line 173, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/martin/web2py/applications/admin/controllers/default.py", line 641, in about\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n  File "/home/martin/web2py/applications/admin/controllers/default.py", line 37, in safe_read\n    safe_file = safe_open(a, b)\n  File "/home/martin/web2py/applications/admin/controllers/default.py", line 34, in safe_open\n    return open(a,b)\nIOError: [Errno 2] No such file or directory: \'/home/martin/web2py/applications/examples/ABOUT\'\n'
p4352
s.